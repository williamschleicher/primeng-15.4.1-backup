"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[7546],{46544:(b,g,a)=>{a.d(g,{N:()=>f});var p=a(41571);const i=["*"];let f=(()=>{class d{}return d.\u0275fac=function(e){return new(e||d)},d.\u0275cmp=p.Xpm({type:d,selectors:[["app-developmentsection"]],ngContentSelectors:i,decls:4,vars:0,consts:[[1,"flex","align-items-center","line-height-3","bg-primary-600","text-white","p-3","text-lg","border-round","mb-3"],[1,"pi","pi-info-circle","text-lg","text-white","mr-2"]],template:function(e,Z){1&e&&(p.F$t(),p.TgZ(0,"div",0),p._UZ(1,"i",1),p._uU(2," Accessibility guide documents the specification of this component based on WCAG guidelines, the implementation is in progress.\n"),p.qZA(),p.Hsn(3))},encapsulation:2}),d})()},67546:(b,g,a)=>{a.r(g),a.d(g,{SelectButtonDemoModule:()=>F});var p=a(36895),i=a(90433),f=a(66352),d=a(84369),s=a(79768),e=a(41571);let Z=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[p.ez,s.a,d.V,f.Qy,i.u5,i.UX,d.V]}),t})();var v=a(10359),u=a(54802),r=a(97873);let h=(()=>{class t{constructor(){this.stateOptions=[{label:"Off",value:"off"},{label:"On",value:"on"}],this.code={basic:'\n<form [formGroup]="formGroup">\n    <p-selectButton [options]="stateOptions" formControlName="value" optionLabel="label" optionValue="value"></p-selectButton>\n</form>',html:'\n<div class="card flex justify-content-center">\n    <form [formGroup]="formGroup">\n        <p-selectButton [options]="stateOptions" formControlName="value" optionLabel="label" optionValue="value"></p-selectButton>\n    </form>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'select-button-reactive-forms-demo',\n    templateUrl: './select-button-reactive-forms-demo.html'\n})\nexport class SelectButtonReactiveFormsDemo implements OnInit {\n    formGroup: FormGroup;\n\n    stateOptions: any[] = [\n        { label: 'Off', value: 'off' },\n        { label: 'On', value: 'on' }\n    ];\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            value: new FormControl('on')\n        });\n    }\n}"}}ngOnInit(){this.formGroup=new i.cw({value:new i.NI("on")})}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:11,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],[3,"formGroup"],["formControlName","value","optionLabel","label","optionValue","value",3,"options"],["selector","select-button-reactive-forms-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"SelectButton can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",1)(8,"form",2),e._UZ(9,"p-selectButton",3),e.qZA()(),e._UZ(10,"app-code",4),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(7),e.Q6J("formGroup",n.formGroup),e.xp6(1),e.Q6J("options",n.stateOptions),e.xp6(1),e.Q6J("code",n.code))},dependencies:[s.h,u.c,r.UN,i._Y,i.JJ,i.JL,i.sg,i.u],encapsulation:2}),t})();var _=a(46544);let T=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:42,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"app-developmentsection")(1,"div")(2,"app-docsectiontext",0)(3,"h3"),e._uU(4,"Screen Reader"),e.qZA(),e.TgZ(5,"p"),e._uU(6," The container element that wraps the buttons has a "),e.TgZ(7,"i"),e._uU(8,"group"),e.qZA(),e._uU(9," role whereas each button element uses "),e.TgZ(10,"i"),e._uU(11,"button"),e.qZA(),e._uU(12," role and "),e.TgZ(13,"i"),e._uU(14,"aria-pressed"),e.qZA(),e._uU(15," is updated depending on selection state. Value to describe an option is automatically set using the "),e.TgZ(16,"i"),e._uU(17,"aria-label"),e.qZA(),e._uU(18," property that refers to the label of an option so it is still suggested to define a label even the option display consists of presentational content like icons only. "),e.qZA()(),e.TgZ(19,"h3"),e._uU(20,"Keyboard Support"),e.qZA(),e.TgZ(21,"div",1)(22,"table",2)(23,"thead")(24,"tr")(25,"th"),e._uU(26,"Key"),e.qZA(),e.TgZ(27,"th"),e._uU(28,"Function"),e.qZA()()(),e.TgZ(29,"tbody")(30,"tr")(31,"td")(32,"i"),e._uU(33,"tab"),e.qZA()(),e.TgZ(34,"td"),e._uU(35,"Moves focus to the buttons."),e.qZA()(),e.TgZ(36,"tr")(37,"td")(38,"i"),e._uU(39,"space"),e.qZA()(),e.TgZ(40,"td"),e._uU(41,"Toggles the checked state of a button."),e.qZA()()()()()()()),2&o&&(e.xp6(2),e.Q6J("title",n.title)("id",n.id))},dependencies:[u.c,_.N],encapsulation:2}),t})(),U=(()=>{class t{constructor(){this.stateOptions=[{label:"Off",value:"off"},{label:"On",value:"on"}],this.value="off",this.code={basic:'\n<p-selectButton [options]="stateOptions" [(ngModel)]="value" optionLabel="label" optionValue="value"></p-selectButton>',html:'\n<div class="card flex justify-content-center">\n    <p-selectButton [options]="stateOptions" [(ngModel)]="value" optionLabel="label" optionValue="value"></p-selectButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-button-basic-demo',\n    templateUrl: './select-button-basic-demo.html'\n})\nexport class SelectButtonBasicDemo {\n    stateOptions: any[] = [{label: 'Off', value: 'off'}, {label: 'On', value: 'on'}];\n\n    value: string = 'off';\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["basic-doc"]],inputs:{id:"id",title:"title"},decls:7,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","label","optionValue","value",3,"options","ngModel","ngModelChange"],["selector","select-button-basic-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"SelectButton requires a value to bind and a collection of options."),e.qZA()(),e.TgZ(4,"div",1)(5,"p-selectButton",2),e.NdJ("ngModelChange",function(c){return n.value=c}),e.qZA()(),e._UZ(6,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(4),e.Q6J("options",n.stateOptions)("ngModel",n.value),e.xp6(1),e.Q6J("code",n.code))},dependencies:[s.h,u.c,r.UN,i.JJ,i.On],encapsulation:2}),t})(),y=(()=>{class t{constructor(){this.stateOptions=[{label:"Off",value:"off"},{label:"On",value:"on"}],this.stateOptions2=[{label:"Option 1",value:"off"},{label:"Option 2",value:"on",constant:!0}],this.value="off",this.code={basic:'\n<p-selectButton [options]="stateOptions" [(ngModel)]="value" optionLabel="label" optionValue="value" [disabled]="true"></p-selectButton>\n<p-selectButton [options]="stateOptions2" [(ngModel)]="value" optionLabel="label" optionValue="value" optionDisabled="constant"></p-selectButton>',html:'\n<div class="card flex justify-content-center">\n    <p-selectButton [options]="stateOptions" [(ngModel)]="value" optionLabel="label" optionValue="value" [disabled]="true"></p-selectButton>\n    <p-selectButton [options]="stateOptions2" [(ngModel)]="value" optionLabel="label" optionValue="value" optionDisabled="constant"></p-selectButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-button-disabled-demo',\n    templateUrl: './select-button-disabled-demo.html'\n})\nexport class SelectButtonDisabledDemo {\n    stateOptions: any[] = [\n        { label: 'Off', value: 'off' },\n        { label: 'On', value: 'on' }\n    ];\n\n    stateOptions2: any[] = [\n        { label: 'Option 1', value: 'off' },\n        { label: 'Option 2', value: 'on', constant:true }\n    ];\n\n    value: string = 'off';\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["disabled-doc"]],inputs:{id:"id",title:"title"},decls:14,vars:8,consts:[[3,"title","id"],[1,"card","flex","justify-content-center","flex-wrap","gap-3"],["optionLabel","label","optionValue","value",3,"options","ngModel","disabled","ngModelChange"],["optionLabel","label","optionValue","value","optionDisabled","constant",3,"options","ngModel","ngModelChange"],["selector","select-button-disabled-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"When "),e.TgZ(4,"i"),e._uU(5,"disabled"),e.qZA(),e._uU(6," is present, the element cannot be edited and focused entirely. Certain options can also be disabled using the "),e.TgZ(7,"i"),e._uU(8,"optionDisabled"),e.qZA(),e._uU(9," property."),e.qZA()(),e.TgZ(10,"div",1)(11,"p-selectButton",2),e.NdJ("ngModelChange",function(c){return n.value=c}),e.qZA(),e.TgZ(12,"p-selectButton",3),e.NdJ("ngModelChange",function(c){return n.value=c}),e.qZA()(),e._UZ(13,"app-code",4),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(10),e.Q6J("options",n.stateOptions)("ngModel",n.value)("disabled",!0),e.xp6(1),e.Q6J("options",n.stateOptions2)("ngModel",n.value),e.xp6(1),e.Q6J("code",n.code))},dependencies:[s.h,u.c,r.UN,i.JJ,i.On],encapsulation:2}),t})(),A=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["events-doc"]],inputs:{id:"id",title:"title"},decls:33,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Parameters"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Description"),e.qZA()()(),e.TgZ(12,"tbody")(13,"tr")(14,"td"),e._uU(15,"onChange"),e.qZA(),e.TgZ(16,"td"),e._uU(17," event.originalEvent: browser event"),e._UZ(18,"br"),e._uU(19," event.value: single value or an array of values that are selected "),e.qZA(),e.TgZ(20,"td"),e._uU(21,"Callback to invoke when value changes."),e.qZA()(),e.TgZ(22,"tr")(23,"td"),e._uU(24,"onOptionClick"),e.qZA(),e.TgZ(25,"td"),e._uU(26," event.originalEvent: browser event"),e._UZ(27,"br"),e._uU(28," event.option: SelectItem instance of the clicked button"),e._UZ(29,"br"),e._uU(30," event.index: Index of the clicked button "),e.qZA(),e.TgZ(31,"td"),e._uU(32,"Callback to invoke when a button is clicked."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id))},dependencies:[u.c],encapsulation:2}),t})(),D=(()=>{class t{constructor(){this.code={typescript:"import { SelectButtonModule } from 'primeng/selectbutton';"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[3,"title","id"],[3,"code","hideToggleCode"]],template:function(o,n){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0)(2,"app-code",1),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(1),e.Q6J("code",n.code)("hideToggleCode",!0))},dependencies:[s.h,u.c],encapsulation:2}),t})(),q=(()=>{class t{constructor(){this.stateOptions=[{label:"Off",value:"off"},{label:"On",value:"on"}],this.value="off",this.code={basic:'\n<p-selectButton [options]="stateOptions" [(ngModel)]="value" optionLabel="label" optionValue="value" class="ng-invalid ng-dirty"></p-selectButton>',html:'\n<div class="card flex justify-content-center">\n    <p-selectButton [options]="stateOptions" [(ngModel)]="value" optionLabel="label" optionValue="value" class="ng-invalid ng-dirty"></p-selectButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-button-invalid-demo',\n    templateUrl: './select-button-invalid-demo.html'\n})\nexport class SelectButtonInvalidDemo {\n    stateOptions: any[] = [{label: 'Off', value: 'off'}, {label: 'On', value: 'on'}];\n\n    value: string = 'off';\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["invalid-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","label","optionValue","value",1,"ng-invalid","ng-dirty",3,"options","ngModel","ngModelChange"],["selector","select-button-invalid-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Invalid state style is added using the "),e.TgZ(4,"i"),e._uU(5,"ng-invalid"),e.qZA(),e._uU(6," and "),e.TgZ(7,"i"),e._uU(8,"ng-dirty"),e.qZA(),e._uU(9," class to indicate a failed validation."),e.qZA()(),e.TgZ(10,"div",1)(11,"p-selectButton",2),e.NdJ("ngModelChange",function(c){return n.value=c}),e.qZA()(),e._UZ(12,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(10),e.Q6J("options",n.stateOptions)("ngModel",n.value),e.xp6(1),e.Q6J("code",n.code))},dependencies:[s.h,u.c,r.UN,i.JJ,i.On],encapsulation:2}),t})(),B=(()=>{class t{constructor(){this.paymentOptions=[{name:"Option 1",value:1},{name:"Option 2",value:2},{name:"Option 3",value:3}],this.code={basic:'\n<p-selectButton [options]="paymentOptions" [(ngModel)]="value" [multiple]="true" optionLabel="name" optionValue="value"></p-selectButton>',html:'\n<div class="card flex justify-content-center">\n    <p-selectButton [options]="paymentOptions" [(ngModel)]="value" [multiple]="true" optionLabel="name" optionValue="value"></p-selectButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-button-multiple-demo',\n    templateUrl: './select-button-multiple-demo.html'\n})\nexport class SelectButtonMultipleDemo {\n    value: number;\n    \n    paymentOptions: any[] = [\n        { name: 'Option 1', value: 1 },\n        { name: 'Option 2', value: 2 },\n        { name: 'Option 3', value: 3 }\n    ];\n\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["multiple-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:6,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","name","optionValue","value",3,"options","ngModel","multiple","ngModelChange"],["selector","select-button-multiple-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"SelectButton allows selecting only one item by default and setting "),e.TgZ(4,"i"),e._uU(5,"multiple"),e.qZA(),e._uU(6," option enables choosing more than one item. In multiple case, model property should be an array."),e.qZA()(),e.TgZ(7,"div",1)(8,"p-selectButton",2),e.NdJ("ngModelChange",function(c){return n.value=c}),e.qZA()(),e._UZ(9,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(7),e.Q6J("options",n.paymentOptions)("ngModel",n.value)("multiple",!0),e.xp6(1),e.Q6J("code",n.code))},dependencies:[s.h,u.c,r.UN,i.JJ,i.On],encapsulation:2}),t})(),O=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["props-doc"]],inputs:{id:"id",title:"title"},decls:114,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Type"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Default"),e.qZA(),e.TgZ(12,"th"),e._uU(13,"Description"),e.qZA()()(),e.TgZ(14,"tbody")(15,"tr")(16,"td"),e._uU(17,"options"),e.qZA(),e.TgZ(18,"td"),e._uU(19,"array"),e.qZA(),e.TgZ(20,"td"),e._uU(21,"null"),e.qZA(),e.TgZ(22,"td"),e._uU(23,"An array of selectitems to display as the available options."),e.qZA()(),e.TgZ(24,"tr")(25,"td"),e._uU(26,"optionLabel"),e.qZA(),e.TgZ(27,"td"),e._uU(28,"string"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"label"),e.qZA(),e.TgZ(31,"td"),e._uU(32,"Name of the label field of an option."),e.qZA()(),e.TgZ(33,"tr")(34,"td"),e._uU(35,"optionValue"),e.qZA(),e.TgZ(36,"td"),e._uU(37,"string"),e.qZA(),e.TgZ(38,"td"),e._uU(39,"value"),e.qZA(),e.TgZ(40,"td"),e._uU(41,"Name of the value field of an option."),e.qZA()(),e.TgZ(42,"tr")(43,"td"),e._uU(44,"optionDisabled"),e.qZA(),e.TgZ(45,"td"),e._uU(46,"string"),e.qZA(),e.TgZ(47,"td"),e._uU(48,"disabled"),e.qZA(),e.TgZ(49,"td"),e._uU(50,"Name of the disabled field of an option."),e.qZA()(),e.TgZ(51,"tr")(52,"td"),e._uU(53,"multiple"),e.qZA(),e.TgZ(54,"td"),e._uU(55,"boolean"),e.qZA(),e.TgZ(56,"td"),e._uU(57,"false"),e.qZA(),e.TgZ(58,"td"),e._uU(59,"When specified, allows selecting multiple values."),e.qZA()(),e.TgZ(60,"tr")(61,"td"),e._uU(62,"tabindex"),e.qZA(),e.TgZ(63,"td"),e._uU(64,"number"),e.qZA(),e.TgZ(65,"td"),e._uU(66,"0"),e.qZA(),e.TgZ(67,"td"),e._uU(68,"Index of the element in tabbing order."),e.qZA()(),e.TgZ(69,"tr")(70,"td"),e._uU(71,"style"),e.qZA(),e.TgZ(72,"td"),e._uU(73,"string"),e.qZA(),e.TgZ(74,"td"),e._uU(75,"null"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"Inline style of the component."),e.qZA()(),e.TgZ(78,"tr")(79,"td"),e._uU(80,"styleClass"),e.qZA(),e.TgZ(81,"td"),e._uU(82,"string"),e.qZA(),e.TgZ(83,"td"),e._uU(84,"null"),e.qZA(),e.TgZ(85,"td"),e._uU(86,"Style class of the component."),e.qZA()(),e.TgZ(87,"tr")(88,"td"),e._uU(89,"ariaLabelledBy"),e.qZA(),e.TgZ(90,"td"),e._uU(91,"string"),e.qZA(),e.TgZ(92,"td"),e._uU(93,"null"),e.qZA(),e.TgZ(94,"td"),e._uU(95,"Establishes relationships between the component and label(s) where its value should be one or more element IDs."),e.qZA()(),e.TgZ(96,"tr")(97,"td"),e._uU(98,"disabled"),e.qZA(),e.TgZ(99,"td"),e._uU(100,"boolean"),e.qZA(),e.TgZ(101,"td"),e._uU(102,"false"),e.qZA(),e.TgZ(103,"td"),e._uU(104,"When present, it specifies that the element should be disabled."),e.qZA()(),e.TgZ(105,"tr")(106,"td"),e._uU(107,"dataKey"),e.qZA(),e.TgZ(108,"td"),e._uU(109,"string"),e.qZA(),e.TgZ(110,"td"),e._uU(111,"null"),e.qZA(),e.TgZ(112,"td"),e._uU(113,"A property to uniquely identify a value in options."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id))},dependencies:[u.c],encapsulation:2}),t})();function M(t,l){1&t&&e._UZ(0,"i"),2&t&&e.Tol(l.$implicit.icon)}let C=(()=>{class t{constructor(){this.justifyOptions=[{icon:"pi pi-align-left",justify:"Left"},{icon:"pi pi-align-right",justify:"Right"},{icon:"pi pi-align-center",justify:"Center"},{icon:"pi pi-align-justify",justify:"Justify"}],this.code={basic:'\n<p-selectButton [options]="justifyOptions" [(ngModel)]="value" optionLabel="icon">\n    <ng-template let-item>\n        <i [class]="item.icon"></i>\n    </ng-template>\n</p-selectButton>',html:'\n<div class="card flex justify-content-center">\n    <p-selectButton [options]="justifyOptions" [(ngModel)]="value" optionLabel="icon">\n        <ng-template let-item>\n            <i [class]="item.icon"></i>\n        </ng-template>\n    </p-selectButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-button-template-demo',\n    templateUrl: './select-button-template-demo.html'\n})\nexport class SelectButtonTemplateDemo {\n    value: any;\n\n    justifyOptions: any[] = [\n        { icon: 'pi pi-align-left', justify: 'Left' },\n        { icon: 'pi pi-align-right', justify: 'Right' },\n        { icon: 'pi pi-align-center', justify: 'Center' },\n        { icon: 'pi pi-align-justify', justify: 'Justify' }\n    ];\n\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["template-doc"]],inputs:{id:"id",title:"title"},decls:8,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","icon",3,"options","ngModel","ngModelChange"],["selector","select-button-template-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"For custom content support define a ng-template where the local ng-template variable refers to an option in the options collection."),e.qZA()(),e.TgZ(4,"div",1)(5,"p-selectButton",2),e.NdJ("ngModelChange",function(c){return n.value=c}),e.YNc(6,M,1,2,"ng-template"),e.qZA()(),e._UZ(7,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(4),e.Q6J("options",n.justifyOptions)("ngModel",n.value),e.xp6(2),e.Q6J("code",n.code))},dependencies:[s.h,u.c,r.UN,i.JJ,i.On],encapsulation:2}),t})();var J=a(63408);let S=(()=>{class t{constructor(){this.docs=[{id:"import",label:"Import",component:D},{id:"basic",label:"Basic",component:U},{id:"reactive-forms",label:"Reactive Forms",component:h},{id:"multiple",label:"Multiple",component:B},{id:"template",label:"Template",component:C},{id:"invalid",label:"Invalid",component:q},{id:"disabled",label:"Disabled",component:y},{id:"accessibility",label:"Accessibility",component:T}],this.apiDocs=[{id:"properties",label:"Properties",component:O},{id:"events",label:"Events",component:A}]}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:2,consts:[["title","Angular SelectButton Component","header","SelectButton","description","SelectButton is used to choose single or multiple items from a list using buttons.",3,"docs","apiDocs"]],template:function(o,n){1&o&&e._UZ(0,"app-doc",0),2&o&&e.Q6J("docs",n.docs)("apiDocs",n.apiDocs)},dependencies:[J.x],encapsulation:2}),t})(),j=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[v.Bz.forChild([{path:"",component:S}]),v.Bz]}),t})(),F=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[p.ez,j,Z]}),t})()}}]);