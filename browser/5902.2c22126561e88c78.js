"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[5902],{46544:(f,g,i)=>{i.d(g,{N:()=>u});var s=i(41571);const l=["*"];let u=(()=>{class r{}return r.\u0275fac=function(d){return new(d||r)},r.\u0275cmp=s.Xpm({type:r,selectors:[["app-developmentsection"]],ngContentSelectors:l,decls:4,vars:0,consts:[[1,"flex","align-items-center","line-height-3","bg-primary-600","text-white","p-3","text-lg","border-round","mb-3"],[1,"pi","pi-info-circle","text-lg","text-white","mr-2"]],template:function(d,e){1&d&&(s.F$t(),s.TgZ(0,"div",0),s._UZ(1,"i",1),s._uU(2," Accessibility guide documents the specification of this component based on WCAG guidelines, the implementation is in progress.\n"),s.qZA(),s.Hsn(3))},encapsulation:2}),r})()},5902:(f,g,i)=>{i.r(g),i.d(g,{ToggleButtonDemoModule:()=>x});var s=i(36895),l=i(90433),u=i(10359),r=i(84215),p=i(84369),d=i(79768),e=i(41571);let h=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[s.ez,d.a,p.V,r.KZ,l.u5,l.UX,u.Bz,p.V]}),t})();var a=i(54802),m=i(20132);let T=(()=>{class t{constructor(){this.code={basic:'\n<form [formGroup]="formGroup">\n    <p-toggleButton formControlName="checked" onLabel="Yes" offLabel="No"></p-toggleButton>\n</form>',html:'\n<div class="card flex justify-content-center">\n    <form [formGroup]="formGroup">\n        <p-toggleButton formControlName="checked" onLabel="Yes" offLabel="No"></p-toggleButton>\n    </form>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'toggle-button-reactive-forms-demo',\n    templateUrl: './toggle-button-reactive-forms-demo.html'\n})\nexport class ToggleButtonReactiveFormsDemo implements OnInit {\n    formGroup: FormGroup;\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            checked: new FormControl<boolean>(false)\n        });\n    }\n}"}}ngOnInit(){this.formGroup=new l.cw({checked:new l.NI(!1)})}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:11,vars:4,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],[3,"formGroup"],["formControlName","checked","onLabel","Yes","offLabel","No"],["selector","toggle-button-reactive-forms-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"ToggleButton can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",1)(8,"form",2),e._UZ(9,"p-toggleButton",3),e.qZA()(),e._UZ(10,"app-code",4),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(7),e.Q6J("formGroup",n.formGroup),e.xp6(2),e.Q6J("code",n.code))},dependencies:[d.h,a.c,m.CO,l._Y,l.JJ,l.JL,l.sg,l.u],encapsulation:2}),t})();var b=i(46544);let U=(()=>{class t{constructor(){this.code={basic:'<span id="rememberme">Remember Me</span>\n<p-toggleButton aria-labelledby="rememberme"></p-toggleButton>\n\n<p-toggleButton aria-label="Remember Me"></p-toggleButton>'}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:43,vars:6,consts:[[3,"title","id"],[3,"code","hideToggleCode","hideCodeSandbox","hideStackBlitz"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"app-developmentsection")(1,"div")(2,"app-docsectiontext",0)(3,"h3"),e._uU(4,"Screen Reader"),e.qZA(),e.TgZ(5,"p"),e._uU(6," ToggleButton component uses an element with "),e.TgZ(7,"i"),e._uU(8,"button"),e.qZA(),e._uU(9," role and updates "),e.TgZ(10,"i"),e._uU(11,"aria-pressed"),e.qZA(),e._uU(12," state for screen readers. Value to describe the component can be defined with "),e.TgZ(13,"i"),e._uU(14,"aria-labelledby"),e.qZA(),e._uU(15," or "),e.TgZ(16,"i"),e._uU(17,"aria-label"),e.qZA(),e._uU(18," props, it is highly suggested to use either of these props as the component changes the label displayed which will result in screen readers to read different labels when the component receives focus. To prevent this, always provide an aria label that does not change related to state. "),e.qZA()(),e._UZ(19,"app-code",1),e.TgZ(20,"h3"),e._uU(21,"Keyboard Support"),e.qZA(),e.TgZ(22,"div",2)(23,"table",3)(24,"thead")(25,"tr")(26,"th"),e._uU(27,"Key"),e.qZA(),e.TgZ(28,"th"),e._uU(29,"Function"),e.qZA()()(),e.TgZ(30,"tbody")(31,"tr")(32,"td")(33,"i"),e._uU(34,"tab"),e.qZA()(),e.TgZ(35,"td"),e._uU(36,"Moves focus to the button."),e.qZA()(),e.TgZ(37,"tr")(38,"td")(39,"i"),e._uU(40,"space"),e.qZA()(),e.TgZ(41,"td"),e._uU(42,"Toggles the checked state."),e.qZA()()()()()()()),2&o&&(e.xp6(2),e.Q6J("title",n.title)("id",n.id),e.xp6(17),e.Q6J("code",n.code)("hideToggleCode",!0)("hideCodeSandbox",!0)("hideStackBlitz",!0))},dependencies:[d.h,a.c,b.N],encapsulation:2}),t})(),A=(()=>{class t{constructor(){this.checked=!1,this.code={basic:'\n<p-toggleButton [(ngModel)]="checked" onLabel="Yes" offLabel="No"></p-toggleButton>',html:'\n<div class="card flex justify-content-center">\n    <p-toggleButton [(ngModel)]="checked" onLabel="Yes" offLabel="No"></p-toggleButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'toggle-button-basic-demo',\n    templateUrl: './toggle-button-basic-demo.html'\n})\nexport class ToggleButtonBasicDemo {\n    checked: boolean = false;\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["basic-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:4,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["onLabel","Yes","offLabel","No",3,"ngModel","ngModelChange"],["selector","toggle-button-basic-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Two-way binding to a boolean property is defined using the standard "),e.TgZ(4,"i"),e._uU(5,"ngModel"),e.qZA(),e._uU(6," directive."),e.qZA()(),e.TgZ(7,"div",1)(8,"p-toggleButton",2),e.NdJ("ngModelChange",function(Z){return n.checked=Z}),e.qZA()(),e._UZ(9,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(7),e.Q6J("ngModel",n.checked),e.xp6(1),e.Q6J("code",n.code))},dependencies:[d.h,a.c,m.CO,l.JJ,l.On],encapsulation:2}),t})();const _=function(){return{width:"10em"}};let q=(()=>{class t{constructor(){this.checked=!1,this.code={basic:'\n<p-toggleButton [(ngModel)]="checked" onLabel="I confirm" offLabel="I reject" onIcon="pi pi-check" offIcon="pi pi-times" [style]="{ width: \'10em\' }"></p-toggleButton>',html:'\n<div class="card flex justify-content-center">\n    <p-toggleButton [(ngModel)]="checked" onLabel="I confirm" offLabel="I reject" onIcon="pi pi-check" offIcon="pi pi-times" [style]="{ width: \'10em\' }"></p-toggleButton>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'toggle-button-customized-demo',\n    templateUrl: './toggle-button-customized-demo.html'\n})\nexport class ToggleButtonCustomizedDemo {\n    checked: boolean = false;\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["customized-doc"]],inputs:{id:"id",title:"title"},decls:19,vars:7,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["onLabel","I confirm","offLabel","I reject","onIcon","pi pi-check","offIcon","pi pi-times",3,"ngModel","ngModelChange"],["selector","toggle-button-customized-demo",3,"code"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Icons and Labels can be customized using "),e.TgZ(4,"i"),e._uU(5,"onLabel"),e.qZA(),e._uU(6,", "),e.TgZ(7,"i"),e._uU(8,"offLabel"),e.qZA(),e._uU(9,", "),e.TgZ(10,"i"),e._uU(11,"onIcon"),e.qZA(),e._uU(12," and "),e.TgZ(13,"i"),e._uU(14,"offIcon"),e.qZA(),e._uU(15," properties."),e.qZA()(),e.TgZ(16,"div",1)(17,"p-toggleButton",2),e.NdJ("ngModelChange",function(Z){return n.checked=Z}),e.qZA()(),e._UZ(18,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(16),e.Akn(e.DdM(6,_)),e.Q6J("ngModel",n.checked),e.xp6(1),e.Q6J("code",n.code))},dependencies:[d.h,a.c,m.CO,l.JJ,l.On],encapsulation:2}),t})(),v=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["events-doc"]],inputs:{id:"id",title:"title"},decls:22,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Parameters"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Description"),e.qZA()()(),e.TgZ(12,"tbody")(13,"tr")(14,"td"),e._uU(15,"onChange"),e.qZA(),e.TgZ(16,"td"),e._uU(17," event.originalEvent: browser event "),e._UZ(18,"br"),e._uU(19," event.checked: boolean value to represent checked state. "),e.qZA(),e.TgZ(20,"td"),e._uU(21,"Callback to invoke on state change."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id))},dependencies:[a.c],encapsulation:2}),t})(),y=(()=>{class t{constructor(){this.code={typescript:"import { ToggleButtonModule } from 'primeng/togglebutton';"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[3,"title","id"],[3,"code","hideToggleCode"]],template:function(o,n){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0)(2,"app-code",1),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(1),e.Q6J("code",n.code)("hideToggleCode",!0))},dependencies:[d.h,a.c],encapsulation:2}),t})(),D=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["props-doc"]],inputs:{id:"id",title:"title"},decls:114,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Type"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Default"),e.qZA(),e.TgZ(12,"th"),e._uU(13,"Description"),e.qZA()()(),e.TgZ(14,"tbody")(15,"tr")(16,"td"),e._uU(17,"onLabel"),e.qZA(),e.TgZ(18,"td"),e._uU(19,"string"),e.qZA(),e.TgZ(20,"td"),e._uU(21,"null"),e.qZA(),e.TgZ(22,"td"),e._uU(23,"Label for the on state."),e.qZA()(),e.TgZ(24,"tr")(25,"td"),e._uU(26,"offLabel"),e.qZA(),e.TgZ(27,"td"),e._uU(28,"string"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"null"),e.qZA(),e.TgZ(31,"td"),e._uU(32,"Label for the off state."),e.qZA()(),e.TgZ(33,"tr")(34,"td"),e._uU(35,"onIcon"),e.qZA(),e.TgZ(36,"td"),e._uU(37,"string"),e.qZA(),e.TgZ(38,"td"),e._uU(39,"null"),e.qZA(),e.TgZ(40,"td"),e._uU(41,"Icon for the on state."),e.qZA()(),e.TgZ(42,"tr")(43,"td"),e._uU(44,"offIcon"),e.qZA(),e.TgZ(45,"td"),e._uU(46,"string"),e.qZA(),e.TgZ(47,"td"),e._uU(48,"null"),e.qZA(),e.TgZ(49,"td"),e._uU(50,"Icon for the off state."),e.qZA()(),e.TgZ(51,"tr")(52,"td"),e._uU(53,"iconPos"),e.qZA(),e.TgZ(54,"td"),e._uU(55,"string"),e.qZA(),e.TgZ(56,"td"),e._uU(57,"left"),e.qZA(),e.TgZ(58,"td"),e._uU(59,'Position of the icon, valid values are "left" and "right".'),e.qZA()(),e.TgZ(60,"tr")(61,"td"),e._uU(62,"style"),e.qZA(),e.TgZ(63,"td"),e._uU(64,"string"),e.qZA(),e.TgZ(65,"td"),e._uU(66,"null"),e.qZA(),e.TgZ(67,"td"),e._uU(68,"Inline style of the element."),e.qZA()(),e.TgZ(69,"tr")(70,"td"),e._uU(71,"styleClass"),e.qZA(),e.TgZ(72,"td"),e._uU(73,"string"),e.qZA(),e.TgZ(74,"td"),e._uU(75,"null"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"Style class of the element."),e.qZA()(),e.TgZ(78,"tr")(79,"td"),e._uU(80,"disabled"),e.qZA(),e.TgZ(81,"td"),e._uU(82,"boolean"),e.qZA(),e.TgZ(83,"td"),e._uU(84,"false"),e.qZA(),e.TgZ(85,"td"),e._uU(86,"When present, it specifies that the element should be disabled."),e.qZA()(),e.TgZ(87,"tr")(88,"td"),e._uU(89,"tabindex"),e.qZA(),e.TgZ(90,"td"),e._uU(91,"number"),e.qZA(),e.TgZ(92,"td"),e._uU(93,"null"),e.qZA(),e.TgZ(94,"td"),e._uU(95,"Index of the element in tabbing order."),e.qZA()(),e.TgZ(96,"tr")(97,"td"),e._uU(98,"inputId"),e.qZA(),e.TgZ(99,"td"),e._uU(100,"string"),e.qZA(),e.TgZ(101,"td"),e._uU(102,"null"),e.qZA(),e.TgZ(103,"td"),e._uU(104,"Identifier of the focus input to match a label defined for the component."),e.qZA()(),e.TgZ(105,"tr")(106,"td"),e._uU(107,"ariaLabelledBy"),e.qZA(),e.TgZ(108,"td"),e._uU(109,"string"),e.qZA(),e.TgZ(110,"td"),e._uU(111,"null"),e.qZA(),e.TgZ(112,"td"),e._uU(113,"Establishes relationships between the component and label(s) where its value should be one or more element IDs."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id))},dependencies:[a.c],encapsulation:2}),t})();const B=function(){return["/theming"]};let C=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["style-doc"]],inputs:{id:"id",title:"title"},decls:36,vars:4,consts:[[3,"title","id"],["href","#",3,"routerLink"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,n){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Following is the list of structural style classes, for theming classes visit "),e.TgZ(4,"a",1),e._uU(5,"theming"),e.qZA(),e._uU(6," page."),e.qZA()(),e.TgZ(7,"div",2)(8,"table",3)(9,"thead")(10,"tr")(11,"th"),e._uU(12,"Name"),e.qZA(),e.TgZ(13,"th"),e._uU(14,"Element"),e.qZA()()(),e.TgZ(15,"tbody")(16,"tr")(17,"td"),e._uU(18,"p-knob"),e.qZA(),e.TgZ(19,"td"),e._uU(20,"Container element."),e.qZA()(),e.TgZ(21,"tr")(22,"td"),e._uU(23,"p-knob-text"),e.qZA(),e.TgZ(24,"td"),e._uU(25,"Text element."),e.qZA()(),e.TgZ(26,"tr")(27,"td"),e._uU(28,"p-knob-value"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"Value element."),e.qZA()(),e.TgZ(31,"tr")(32,"td"),e._uU(33,"p-knob-text"),e.qZA(),e.TgZ(34,"td"),e._uU(35,"Text element."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",n.title)("id",n.id),e.xp6(3),e.Q6J("routerLink",e.DdM(3,B)))},dependencies:[a.c,u.rH],encapsulation:2}),t})();var I=i(63408);let M=(()=>{class t{constructor(){this.docs=[{id:"import",label:"Import",component:y},{id:"basic",label:"Basic",component:A},{id:"reactive-forms",label:"Reactive Forms",component:T},{id:"customized",label:"Customized",component:q},{id:"style",label:"Style",component:C},{id:"accessibility",label:"Accessibility",component:U}],this.apiDocs=[{id:"properties",label:"Properties",component:D},{id:"events",label:"Events",component:v}]}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:2,consts:[["title","Angular ToggleButton Component","header","ToggleButton","description","ToggleButton is used to select a boolean value using a button.",3,"docs","apiDocs"]],template:function(o,n){1&o&&e._UZ(0,"app-doc",0),2&o&&e.Q6J("docs",n.docs)("apiDocs",n.apiDocs)},dependencies:[I.x],encapsulation:2}),t})(),w=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[u.Bz.forChild([{path:"",component:M}]),u.Bz]}),t})(),x=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[s.ez,w,h]}),t})()}}]);