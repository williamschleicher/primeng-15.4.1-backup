"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[8605],{46544:(Z,b,i)=>{i.d(b,{N:()=>g});var s=i(41571);const h=["*"];let g=(()=>{class n{}return n.\u0275fac=function(d){return new(d||n)},n.\u0275cmp=s.Xpm({type:n,selectors:[["app-developmentsection"]],ngContentSelectors:h,decls:4,vars:0,consts:[[1,"flex","align-items-center","line-height-3","bg-primary-600","text-white","p-3","text-lg","border-round","mb-3"],[1,"pi","pi-info-circle","text-lg","text-white","mr-2"]],template:function(d,e){1&d&&(s.F$t(),s.TgZ(0,"div",0),s._UZ(1,"i",1),s._uU(2," Accessibility guide documents the specification of this component based on WCAG guidelines, the implementation is in progress.\n"),s.qZA(),s.Hsn(3))},encapsulation:2}),n})()},48605:(Z,b,i)=>{i.r(b),i.d(b,{CheckboxDemoModule:()=>N});var s=i(36895),h=i(73568),g=i(10359),n=i(90433),m=i(84369),d=i(79768),e=i(41571);let f=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[s.ez,g.Bz,n.u5,d.a,m.V,h.nD,n.UX]}),t})();var r=i(54802),u=i(36861);let _=(()=>{class t{constructor(){this.selectedValues=[],this.code={basic:'\n<p-checkbox name="groupname" value="val1" label="Value 1" [(ngModel)]="selectedValues"></p-checkbox>\n<p-checkbox name="groupname" value="val2" label="Value 2" [(ngModel)]="selectedValues"></p-checkbox>',html:'\n<div class="card flex justify-content-center gap-3">\n    <p-checkbox name="groupname" value="val1" label="Value 1" [(ngModel)]="selectedValues"></p-checkbox>\n    <p-checkbox name="groupname" value="val2" label="Value 2" [(ngModel)]="selectedValues"></p-checkbox>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'checkbox-label-demo',\n    templateUrl: './checkbox-label-demo.html'\n})\nexport class CheckboxLabelDemo {\n    selectedValues: string[] = [];\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["checkbox-label-demo"]],inputs:{id:"id",title:"title"},decls:8,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center","gap-3"],["name","groupname","value","val1","label","Value 1",3,"ngModel","ngModelChange"],["name","groupname","value","val2","label","Value 2",3,"ngModel","ngModelChange"],["selector","checkbox-label-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"The label attribute provides a label text for the checkbox. This label is also clickable and toggles the checked state."),e.qZA()(),e.TgZ(4,"div",1)(5,"p-checkbox",2),e.NdJ("ngModelChange",function(a){return c.selectedValues=a}),e.qZA(),e.TgZ(6,"p-checkbox",3),e.NdJ("ngModelChange",function(a){return c.selectedValues=a}),e.qZA()(),e._UZ(7,"app-code",4),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(4),e.Q6J("ngModel",c.selectedValues),e.xp6(1),e.Q6J("ngModel",c.selectedValues),e.xp6(1),e.Q6J("code",c.code))},dependencies:[n.JJ,n.On,d.h,r.c,u.XZ],encapsulation:2}),t})(),x=(()=>{class t{constructor(){this.code={basic:'\n<p-checkbox [(ngModel)]="checked" [binary]="true" inputId="binary"></p-checkbox>',html:'\n<div class="card flex justify-content-center">\n    <p-checkbox [(ngModel)]="checked" [binary]="true" inputId="binary"></p-checkbox>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'checkbox-basic-demo',\n    templateUrl: './checkbox-basic-demo.html'\n})\nexport class CheckboxBasicDemo {\n    checked: boolean;\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["checkbox-basic-demo"]],inputs:{id:"id",title:"title"},decls:13,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["inputId","binary",3,"ngModel","binary","ngModelChange"],["selector","checkbox-basic-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Binary checkbox is used as a controlled input with "),e.TgZ(4,"i"),e._uU(5,"ngModel"),e.qZA(),e._uU(6," and "),e.TgZ(7,"i"),e._uU(8,"binary"),e.qZA(),e._uU(9," properties."),e.qZA()(),e.TgZ(10,"div",1)(11,"p-checkbox",2),e.NdJ("ngModelChange",function(a){return c.checked=a}),e.qZA()(),e._UZ(12,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(10),e.Q6J("ngModel",c.checked)("binary",!0),e.xp6(1),e.Q6J("code",c.code))},dependencies:[n.JJ,n.On,d.h,r.c,u.XZ],encapsulation:2}),t})(),k=(()=>{class t{constructor(){this.code={typescript:"import { CheckboxModule } from 'primeng/checkbox';"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[3,"title","id"],[3,"code","hideToggleCode"]],template:function(o,c){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0)(2,"app-code",1),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(1),e.Q6J("code",c.code)("hideToggleCode",!0))},dependencies:[d.h,r.c],encapsulation:2}),t})(),T=(()=>{class t{constructor(){this.selectedCities=[],this.code={basic:'\n<div class="flex align-items-center gap-1">\n        <p-checkbox name="group1" value="New York" [(ngModel)]="selectedCities" inputId="ny"></p-checkbox>\n        <label for="ny">New York</label>\n</div>\n\n<div class="flex align-items-center gap-1">\n    <p-checkbox name="group1" value="San Francisco" [(ngModel)]="selectedCities" inputId="sf"></p-checkbox>\n    <label for="sf">San Francisco</label>\n</div>\n\n<div class="flex align-items-center gap-1">\n    <p-checkbox name="group1" value="Los Angeles" [(ngModel)]="selectedCities" inputId="la"></p-checkbox>\n    <label for="la">Los Angeles</label>\n</div>',html:'\n<div class="card flex justify-content-center gap-3">\n    <div class="flex align-items-center gap-1">\n        <p-checkbox name="group1" value="New York" [(ngModel)]="selectedCities" inputId="ny"></p-checkbox>\n        <label for="ny">New York</label>\n    </div>\n    <div class="flex align-items-center gap-1">\n        <p-checkbox name="group1" value="San Francisco" [(ngModel)]="selectedCities" inputId="sf"></p-checkbox>\n        <label for="sf">San Francisco</label>\n    </div>\n    <div class="flex align-items-center gap-1">\n        <p-checkbox name="group1" value="Los Angeles" [(ngModel)]="selectedCities" inputId="la"></p-checkbox>\n        <label for="la">Los Angeles</label>\n    </div>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'checkbox-multiple-demo',\n    templateUrl: './checkbox-multiple-demo.html'\n})\nexport class CheckboxMultipleDemo {\n    selectedCities: string[] = [];\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["checkbox-multiple-demo"]],inputs:{id:"id",title:"title"},decls:18,vars:6,consts:[[3,"title","id"],[1,"card","flex","justify-content-center","gap-3"],[1,"flex","align-items-center","gap-1"],["name","group1","value","New York","inputId","ny",3,"ngModel","ngModelChange"],["for","ny"],["name","group1","value","San Francisco","inputId","sf",3,"ngModel","ngModelChange"],["for","sf"],["name","group1","value","Los Angeles","inputId","la",3,"ngModel","ngModelChange"],["for","la"],["selector","checkbox-multiple-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Multiple checkboxes can be grouped together."),e.qZA()(),e.TgZ(4,"div",1)(5,"div",2)(6,"p-checkbox",3),e.NdJ("ngModelChange",function(a){return c.selectedCities=a}),e.qZA(),e.TgZ(7,"label",4),e._uU(8,"New York"),e.qZA()(),e.TgZ(9,"div",2)(10,"p-checkbox",5),e.NdJ("ngModelChange",function(a){return c.selectedCities=a}),e.qZA(),e.TgZ(11,"label",6),e._uU(12,"San Francisco"),e.qZA()(),e.TgZ(13,"div",2)(14,"p-checkbox",7),e.NdJ("ngModelChange",function(a){return c.selectedCities=a}),e.qZA(),e.TgZ(15,"label",8),e._uU(16,"Los Angeles"),e.qZA()()(),e._UZ(17,"app-code",9),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(5),e.Q6J("ngModel",c.selectedCities),e.xp6(4),e.Q6J("ngModel",c.selectedCities),e.xp6(4),e.Q6J("ngModel",c.selectedCities),e.xp6(3),e.Q6J("code",c.code))},dependencies:[n.JJ,n.On,d.h,r.c,u.XZ],encapsulation:2}),t})();function A(t,l){if(1&t){const o=e.EpF();e.TgZ(0,"div",5)(1,"p-checkbox",6),e.NdJ("ngModelChange",function(p){e.CHM(o);const a=e.oxw();return e.KtG(a.selectedCategories=p)}),e.qZA(),e.TgZ(2,"label",7),e._uU(3),e.qZA()()}if(2&t){const o=l.$implicit,c=e.oxw();e.xp6(1),e.Q6J("value",o)("ngModel",c.selectedCategories)("inputId",o.key),e.xp6(1),e.Q6J("for",o.key),e.xp6(1),e.Oqu(o.name)}}let y=(()=>{class t{constructor(){this.selectedCategories=[],this.categories=[{name:"Accounting",key:"A"},{name:"Marketing",key:"M"},{name:"Production",key:"P"},{name:"Research",key:"R"}],this.code={basic:'\n<div *ngFor="let category of categories" class="field-checkbox">\n    <p-checkbox name="group" [value]="category" [(ngModel)]="selectedCategories" [inputId]="category.key"></p-checkbox>\n    <label [for]="category.key">{{ category.name }}</label>\n</div>',html:'\n<div class="card flex justify-content-center">\n    <div class="flex flex-column gap-2">\n        <div *ngFor="let category of categories" class="field-checkbox">\n            <p-checkbox name="group" [value]="category" [(ngModel)]="selectedCategories" [inputId]="category.key"></p-checkbox>\n            <label [for]="category.key">{{ category.name }}</label>\n        </div>\n    </div>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'checkbox-dynamic-demo',\n    templateUrl: './checkbox-dynamic-demo.html'\n})\nexport class CheckboxDynamicDemo {\n    selectedCategories: any[] = [];\n\n    categories: any[] = [\n        { name: 'Accounting', key: 'A' },\n        { name: 'Marketing', key: 'M' },\n        { name: 'Production', key: 'P' },\n        { name: 'Research', key: 'R' }\n    ];\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["checkbox-dynamic-demo"]],inputs:{id:"id",title:"title"},decls:8,vars:4,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],[1,"flex","flex-column","gap-2"],["class","field-checkbox",4,"ngFor","ngForOf"],["selector","checkbox-dynamic-demo",3,"code"],[1,"field-checkbox"],["name","group",3,"value","ngModel","inputId","ngModelChange"],[3,"for"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Checkboxes can be generated using a list of values."),e.qZA()(),e.TgZ(4,"div",1)(5,"div",2),e.YNc(6,A,4,5,"div",3),e.qZA()(),e._UZ(7,"app-code",4),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(5),e.Q6J("ngForOf",c.categories),e.xp6(1),e.Q6J("code",c.code))},dependencies:[s.sg,n.JJ,n.On,d.h,r.c,u.XZ],encapsulation:2}),t})(),U=(()=>{class t{constructor(){this.code={basic:'\n<p-checkbox [disabled]="true" [(ngModel)]="checked"></p-checkbox>',html:'\n<div class="card flex justify-content-center">\n    <p-checkbox [disabled]="true" [(ngModel)]="checked"></p-checkbox>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'checkbox-disabled-demo',\n    templateUrl: './checkbox-disabled-demo.html'\n})\nexport class CheckboxDisabledDemo {\n    checked: boolean;\n}"}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["checkbox-disabled-demo"]],inputs:{id:"id",title:"title"},decls:10,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],[3,"disabled","ngModel","ngModelChange"],["selector","checkbox-disabled-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"When "),e.TgZ(4,"i"),e._uU(5,"disabled"),e.qZA(),e._uU(6," is present, the element cannot be edited and focused."),e.qZA()(),e.TgZ(7,"div",1)(8,"p-checkbox",2),e.NdJ("ngModelChange",function(a){return c.checked=a}),e.qZA()(),e._UZ(9,"app-code",3),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(7),e.Q6J("disabled",!0)("ngModel",c.checked),e.xp6(1),e.Q6J("code",c.code))},dependencies:[n.JJ,n.On,d.h,r.c,u.XZ],encapsulation:2}),t})(),v=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["style-doc"]],inputs:{id:"id",title:"title"},decls:50,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Following is the list of structural style classes, for theming classes visit "),e.TgZ(4,"i"),e._uU(5,"theming page."),e.qZA()()(),e.TgZ(6,"div",1)(7,"table",2)(8,"thead")(9,"tr")(10,"th"),e._uU(11,"Name"),e.qZA(),e.TgZ(12,"th"),e._uU(13,"Element"),e.qZA()()(),e.TgZ(14,"tbody")(15,"tr")(16,"td"),e._uU(17,"p-checkbox"),e.qZA(),e.TgZ(18,"td"),e._uU(19,"Container element"),e.qZA()(),e.TgZ(20,"tr")(21,"td"),e._uU(22,"p-checkbox-box"),e.qZA(),e.TgZ(23,"td"),e._uU(24,"Container of icon."),e.qZA()(),e.TgZ(25,"tr")(26,"td"),e._uU(27,"p-checkbox-icon"),e.qZA(),e.TgZ(28,"td"),e._uU(29,"Icon element."),e.qZA()(),e.TgZ(30,"tr")(31,"td"),e._uU(32,"p-checkbox-label"),e.qZA(),e.TgZ(33,"td"),e._uU(34,"Label element."),e.qZA()(),e.TgZ(35,"tr")(36,"td"),e._uU(37,"p-label-active"),e.qZA(),e.TgZ(38,"td"),e._uU(39,"Label element of a checked state."),e.qZA()(),e.TgZ(40,"tr")(41,"td"),e._uU(42,"p-label-focus"),e.qZA(),e.TgZ(43,"td"),e._uU(44,"Label element of a focused state."),e.qZA()(),e.TgZ(45,"tr")(46,"td"),e._uU(47,"p-label-disabled"),e.qZA(),e.TgZ(48,"td"),e._uU(49,"Label element of a disabled state."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id))},dependencies:[r.c],encapsulation:2}),t})(),q=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["props-doc"]],inputs:{id:"id",title:"title"},decls:170,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component."),e.qZA()(),e.TgZ(4,"div",1)(5,"table",2)(6,"thead")(7,"tr")(8,"th"),e._uU(9,"Name"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Type"),e.qZA(),e.TgZ(12,"th"),e._uU(13,"Default"),e.qZA(),e.TgZ(14,"th"),e._uU(15,"Description"),e.qZA()()(),e.TgZ(16,"tbody")(17,"tr")(18,"td"),e._uU(19,"name"),e.qZA(),e.TgZ(20,"td"),e._uU(21,"string"),e.qZA(),e.TgZ(22,"td"),e._uU(23,"null"),e.qZA(),e.TgZ(24,"td"),e._uU(25,"Name of the checkbox group."),e.qZA()(),e.TgZ(26,"tr")(27,"td"),e._uU(28,"value"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"any"),e.qZA(),e.TgZ(31,"td"),e._uU(32,"null"),e.qZA(),e.TgZ(33,"td"),e._uU(34,"Value of the checkbox."),e.qZA()(),e.TgZ(35,"tr")(36,"td"),e._uU(37,"label"),e.qZA(),e.TgZ(38,"td"),e._uU(39,"string"),e.qZA(),e.TgZ(40,"td"),e._uU(41,"null"),e.qZA(),e.TgZ(42,"td"),e._uU(43,"Label of the checkbox."),e.qZA()(),e.TgZ(44,"tr")(45,"td"),e._uU(46,"disabled"),e.qZA(),e.TgZ(47,"td"),e._uU(48,"boolean"),e.qZA(),e.TgZ(49,"td"),e._uU(50,"false"),e.qZA(),e.TgZ(51,"td"),e._uU(52,"When present, it specifies that the element should be disabled."),e.qZA()(),e.TgZ(53,"tr")(54,"td"),e._uU(55,"binary"),e.qZA(),e.TgZ(56,"td"),e._uU(57,"boolean"),e.qZA(),e.TgZ(58,"td"),e._uU(59,"false"),e.qZA(),e.TgZ(60,"td"),e._uU(61,"Allows to select a boolean value instead of multiple values."),e.qZA()(),e.TgZ(62,"tr")(63,"td"),e._uU(64,"tabindex"),e.qZA(),e.TgZ(65,"td"),e._uU(66,"number"),e.qZA(),e.TgZ(67,"td"),e._uU(68,"null"),e.qZA(),e.TgZ(69,"td"),e._uU(70,"Index of the element in tabbing order."),e.qZA()(),e.TgZ(71,"tr")(72,"td"),e._uU(73,"inputId"),e.qZA(),e.TgZ(74,"td"),e._uU(75,"string"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"null"),e.qZA(),e.TgZ(78,"td"),e._uU(79,"Identifier of the focus input to match a label defined for the component."),e.qZA()(),e.TgZ(80,"tr")(81,"td"),e._uU(82,"ariaLabelledBy"),e.qZA(),e.TgZ(83,"td"),e._uU(84,"string"),e.qZA(),e.TgZ(85,"td"),e._uU(86,"null"),e.qZA(),e.TgZ(87,"td"),e._uU(88,"Establishes relationships between the component and label(s) where its value should be one or more element IDs."),e.qZA()(),e.TgZ(89,"tr")(90,"td"),e._uU(91,"ariaLabel"),e.qZA(),e.TgZ(92,"td"),e._uU(93,"string"),e.qZA(),e.TgZ(94,"td"),e._uU(95,"null"),e.qZA(),e.TgZ(96,"td"),e._uU(97,"Used to define a string that labels the input element."),e.qZA()(),e.TgZ(98,"tr")(99,"td"),e._uU(100,"style"),e.qZA(),e.TgZ(101,"td"),e._uU(102,"object"),e.qZA(),e.TgZ(103,"td"),e._uU(104,"null"),e.qZA(),e.TgZ(105,"td"),e._uU(106,"Inline style of the component."),e.qZA()(),e.TgZ(107,"tr")(108,"td"),e._uU(109,"styleClass"),e.qZA(),e.TgZ(110,"td"),e._uU(111,"string"),e.qZA(),e.TgZ(112,"td"),e._uU(113,"null"),e.qZA(),e.TgZ(114,"td"),e._uU(115,"Style class of the component."),e.qZA()(),e.TgZ(116,"tr")(117,"td"),e._uU(118,"labelStyleClass"),e.qZA(),e.TgZ(119,"td"),e._uU(120,"string"),e.qZA(),e.TgZ(121,"td"),e._uU(122,"null"),e.qZA(),e.TgZ(123,"td"),e._uU(124,"Style class of the label."),e.qZA()(),e.TgZ(125,"tr")(126,"td"),e._uU(127,"checkboxIcon"),e.qZA(),e.TgZ(128,"td"),e._uU(129,"string"),e.qZA(),e.TgZ(130,"td"),e._uU(131,"null"),e.qZA(),e.TgZ(132,"td"),e._uU(133,"Icon class of the checkbox icon."),e.qZA()(),e.TgZ(134,"tr")(135,"td"),e._uU(136,"readonly"),e.qZA(),e.TgZ(137,"td"),e._uU(138,"boolean"),e.qZA(),e.TgZ(139,"td"),e._uU(140,"false"),e.qZA(),e.TgZ(141,"td"),e._uU(142,"When present, it specifies that the component cannot be edited."),e.qZA()(),e.TgZ(143,"tr")(144,"td"),e._uU(145,"required"),e.qZA(),e.TgZ(146,"td"),e._uU(147,"boolean"),e.qZA(),e.TgZ(148,"td"),e._uU(149,"false"),e.qZA(),e.TgZ(150,"td"),e._uU(151,"When present, it specifies that checkbox must be checked before submitting the form."),e.qZA()(),e.TgZ(152,"tr")(153,"td"),e._uU(154,"trueValue"),e.qZA(),e.TgZ(155,"td"),e._uU(156,"any"),e.qZA(),e.TgZ(157,"td"),e._uU(158,"null"),e.qZA(),e.TgZ(159,"td"),e._uU(160,"Value in checked state."),e.qZA()(),e.TgZ(161,"tr")(162,"td"),e._uU(163,"falseValue"),e.qZA(),e.TgZ(164,"td"),e._uU(165,"any"),e.qZA(),e.TgZ(166,"td"),e._uU(167,"null"),e.qZA(),e.TgZ(168,"td"),e._uU(169,"Value in unchecked state."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id))},dependencies:[r.c],encapsulation:2}),t})();var C=i(46544);let D=(()=>{class t{constructor(){this.code={basic:'<label for="chkbox1">Remember Me</label>\n<p-checkbox inputId="chkbox1"></p-checkbox>\n\n<span id="chkbox2">Remember Me</span>\n<p-checkbox aria-labelledby="chkbox2"></p-checkbox>\n\n<p-checkbox aria-label="Remember Me"></p-checkbox>'}}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:43,vars:6,consts:[[3,"title","id"],[3,"code","hideToggleCode","hideCodeSandbox","hideStackBlitz"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,c){1&o&&(e.TgZ(0,"app-developmentsection")(1,"div")(2,"app-docsectiontext",0)(3,"h3"),e._uU(4,"Screen Reader"),e.qZA(),e.TgZ(5,"p"),e._uU(6," Checkbox component uses a hidden native checkbox element internally that is only visible to screen readers. Value to describe the component can either be provided via "),e.TgZ(7,"i"),e._uU(8,"label"),e.qZA(),e._uU(9," tag combined with "),e.TgZ(10,"i"),e._uU(11,"inputId"),e.qZA(),e._uU(12," prop or using "),e.TgZ(13,"i"),e._uU(14,"aria-labelledby"),e.qZA(),e._uU(15,", "),e.TgZ(16,"i"),e._uU(17,"aria-label"),e.qZA(),e._uU(18," props. "),e.qZA()(),e._UZ(19,"app-code",1),e.TgZ(20,"h3"),e._uU(21,"Keyboard Support"),e.qZA(),e.TgZ(22,"div",2)(23,"table",3)(24,"thead")(25,"tr")(26,"th"),e._uU(27,"Key"),e.qZA(),e.TgZ(28,"th"),e._uU(29,"Function"),e.qZA()()(),e.TgZ(30,"tbody")(31,"tr")(32,"td")(33,"i"),e._uU(34,"tab"),e.qZA()(),e.TgZ(35,"td"),e._uU(36,"Moves focus to the checkbox."),e.qZA()(),e.TgZ(37,"tr")(38,"td")(39,"i"),e._uU(40,"space"),e.qZA()(),e.TgZ(41,"td"),e._uU(42,"Toggles the checked state."),e.qZA()()()()()()()),2&o&&(e.xp6(2),e.Q6J("title",c.title)("id",c.id),e.xp6(17),e.Q6J("code",c.code)("hideToggleCode",!0)("hideCodeSandbox",!0)("hideStackBlitz",!0))},dependencies:[d.h,r.c,C.N],encapsulation:2}),t})(),M=(()=>{class t{constructor(){this.code={basic:'\n<form class="flex align-items-center gap-1" [formGroup]="formGroup">\n    <p-checkbox formControlName="city" value="New York" inputId="ny"></p-checkbox>\n    <label for="ny">New York</label>\n</form>',html:'\n<div class="card">\n    <form class="flex align-items-center gap-1" [formGroup]="formGroup">\n        <p-checkbox formControlName="city" value="New York" inputId="ny"></p-checkbox>\n        <label for="ny">New York</label>\n    </form>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'checkbox-reactive-forms-demo',\n    templateUrl: './checkbox-reactive-forms-demo.html'\n})\nexport class CheckboxReactiveFormsDemo implements OnInit{\n    formGroup: FormGroup;\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            city: new FormControl<string | null>(null)\n        });\n    }\n}"}}ngOnInit(){this.formGroup=new n.cw({city:new n.NI(null)})}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:4,consts:[[3,"title","id"],[1,"card"],[1,"flex","align-items-center","justify-content-center","gap-1",3,"formGroup"],["formControlName","city","value","New York","inputId","ny"],["for","ny"],["selector","checkbox-reactive-forms-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Checkbox can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",1)(8,"form",2),e._UZ(9,"p-checkbox",3),e.TgZ(10,"label",4),e._uU(11,"New York"),e.qZA()()(),e._UZ(12,"app-code",5),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(7),e.Q6J("formGroup",c.formGroup),e.xp6(4),e.Q6J("code",c.code))},dependencies:[n._Y,n.JJ,n.JL,d.h,r.c,u.XZ,n.sg,n.u],encapsulation:2}),t})(),J=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["templates-doc"]],inputs:{id:"id",title:"title"},decls:16,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,c){1&o&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Parameters"),e.qZA()()(),e.TgZ(10,"tbody")(11,"tr")(12,"td"),e._uU(13,"icon"),e.qZA(),e.TgZ(14,"td"),e._uU(15,"-"),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id))},dependencies:[r.c],encapsulation:2}),t})();var F=i(63408);let I=(()=>{class t{constructor(){this.docs=[{id:"import",label:"Import",component:k},{id:"basic",label:"Basic",component:x},{id:"reactive-forms",label:"Reactive Forms",component:M},{id:"group",label:"Group",component:T},{id:"label",label:"Label",component:_},{id:"dynamic",label:"Dynamic",component:y},{id:"disabled",label:"Disabled",component:U},{id:"style",label:"Style",component:v},{id:"accessibility",label:"Accessibilirty",component:D}],this.apiDocs=[{id:"properties",label:"Properties",component:q},{id:"templates",label:"Templates",component:J}]}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:2,consts:[["title","Angular Checkbox Component","header","Checkbox","description","Checkbox is an extension to standard checkbox element with theming.",3,"docs","apiDocs"]],template:function(o,c){1&o&&e._UZ(0,"app-doc",0),2&o&&e.Q6J("docs",c.docs)("apiDocs",c.apiDocs)},dependencies:[F.x],encapsulation:2}),t})(),w=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[g.Bz.forChild([{path:"",component:I}]),g.Bz]}),t})(),N=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[s.ez,w,h.nD,m.V,f]}),t})()}}]);