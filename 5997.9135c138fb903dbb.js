"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[5997],{46544:(U,_,a)=>{a.d(_,{N:()=>g});var r=a(41571);const n=["*"];let g=(()=>{class Z{}return Z.\u0275fac=function(s){return new(s||Z)},Z.\u0275cmp=r.Xpm({type:Z,selectors:[["app-developmentsection"]],ngContentSelectors:n,decls:4,vars:0,consts:[[1,"flex","align-items-center","line-height-3","bg-primary-600","text-white","p-3","text-lg","border-round","mb-3"],[1,"pi","pi-info-circle","text-lg","text-white","mr-2"]],template:function(s,e){1&s&&(r.F$t(),r.TgZ(0,"div",0),r._UZ(1,"i",1),r._uU(2," Accessibility guide documents the specification of this component based on WCAG guidelines, the implementation is in progress.\n"),r.qZA(),r.Hsn(3))},encapsulation:2}),Z})()},5997:(U,_,a)=>{a.r(_),a.d(_,{MultiSelectDemoModule:()=>W});var r=a(36895),n=a(90433),g=a(10359),Z=a(303),m=a(84369),s=a(79768),e=a(41571);let f=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.ez,s.a,g.Bz,Z.q4,n.u5,n.UX,m.V,m.V]}),t})();var u=a(58063),d=a(54802);let h=(()=>{class t{constructor(){this.code={basic:'\n<form [formGroup]="formGroup">\n    <p-multiSelect [options]="cities" formControlName="selectedCities" optionLabel="name"></p-multiSelect>\n</form>',html:'\n<div class="card flex justify-content-center">\n    <form [formGroup]="formGroup">\n        <p-multiSelect [options]="cities" formControlName="selectedCities" optionLabel="name"></p-multiSelect>\n    </form>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-reactive-forms-demo',\n    templateUrl: './multi-select-reactive-forms-demo.html'\n})\nexport class MultiSelectReactiveFormsDemo implements OnInit {\n    cities: City[];\n\n    formGroup: FormGroup;\n\n    ngOnInit() {\n        this.cities = [\n            { name: 'New York', code: 'NY' },\n            { name: 'Rome', code: 'RM' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Paris', code: 'PRS' }\n        ];\n\n        this.formGroup = new FormGroup({\n            selectedCities: new FormControl<City[] | null>(null)\n        });\n    }  \n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],this.formGroup=new n.cw({selectedCities:new n.NI(null)})}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:11,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],[3,"formGroup"],["formControlName","selectedCities","optionLabel","name",3,"options"],["selector","multi-select-reactive-forms-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"MultiSelect can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",1)(8,"form",2),e._UZ(9,"p-multiSelect",3),e.qZA()(),e._UZ(10,"app-code",4),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("formGroup",o.formGroup),e.xp6(1),e.Q6J("options",o.cities),e.xp6(1),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n._Y,n.JJ,n.JL,n.sg,n.u,d.c],encapsulation:2}),t})();var A=a(46544);let q=(()=>{class t{constructor(){this.code={basic:'<span id="dd1">Options</span>\n<p-multiSelect aria-labelledby="dd1"></p-multiSelect>\n\n<p-multiSelect aria-label="Options"></p-multiSelect>'}}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:269,vars:6,consts:[[3,"title","id"],["href","/configuration/#locale"],[3,"code","hideToggleCode","hideCodeSandbox","hideStackBlitz"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(i,o){1&i&&(e.TgZ(0,"app-developmentsection")(1,"div")(2,"app-docsectiontext",0)(3,"h3"),e._uU(4,"Screen Reader"),e.qZA(),e.TgZ(5,"p"),e._uU(6," Value to describe the component can either be provided with "),e.TgZ(7,"i"),e._uU(8,"aria-labelledby"),e.qZA(),e._uU(9," or "),e.TgZ(10,"i"),e._uU(11,"aria-label"),e.qZA(),e._uU(12," props. The multiselect component has a "),e.TgZ(13,"i"),e._uU(14,"combobox"),e.qZA(),e._uU(15," role in addition to "),e.TgZ(16,"i"),e._uU(17,"aria-haspopup"),e.qZA(),e._uU(18," and "),e.TgZ(19,"i"),e._uU(20,"aria-expanded"),e.qZA(),e._uU(21," attributes. The relation between the combobox and the popup is created with "),e.TgZ(22,"i"),e._uU(23,"aria-controls"),e.qZA(),e._uU(24," attribute that refers to the id of the popup listbox. "),e.qZA(),e.TgZ(25,"p"),e._uU(26,"The popup listbox uses "),e.TgZ(27,"i"),e._uU(28,"listbox"),e.qZA(),e._uU(29," as the role with "),e.TgZ(30,"i"),e._uU(31,"aria-multiselectable"),e.qZA(),e._uU(32," enabled. Each list item has an "),e.TgZ(33,"i"),e._uU(34,"option"),e.qZA(),e._uU(35," role along with "),e.TgZ(36,"i"),e._uU(37,"aria-label"),e.qZA(),e._uU(38,", "),e.TgZ(39,"i"),e._uU(40,"aria-selected"),e.qZA(),e._uU(41," and "),e.TgZ(42,"i"),e._uU(43,"aria-disabled"),e.qZA(),e._uU(44," attributes."),e.qZA(),e.TgZ(45,"p"),e._uU(46," Checkbox component at the header uses a hidden native checkbox element internally that is only visible to screen readers. Value to read is defined with the "),e.TgZ(47,"i"),e._uU(48,"selectAll"),e.qZA(),e._uU(49," and "),e.TgZ(50,"i"),e._uU(51,"unselectAll"),e.qZA(),e._uU(52," keys of the "),e.TgZ(53,"i"),e._uU(54,"aria"),e.qZA(),e._uU(55," property from the "),e.TgZ(56,"a",1),e._uU(57,"locale"),e.qZA(),e._uU(58," API. "),e.qZA(),e.TgZ(59,"p"),e._uU(60,"If filtering is enabled, "),e.TgZ(61,"i"),e._uU(62,"filterInputProps"),e.qZA(),e._uU(63," can be defined to give "),e.TgZ(64,"i"),e._uU(65,"aria-*"),e.qZA(),e._uU(66," props to the input element."),e.qZA(),e.TgZ(67,"p"),e._uU(68,"Close button uses "),e.TgZ(69,"i"),e._uU(70,"close"),e.qZA(),e._uU(71," key of the "),e.TgZ(72,"i"),e._uU(73,"aria"),e.qZA(),e._uU(74," property from the "),e.TgZ(75,"a",1),e._uU(76,"locale"),e.qZA(),e._uU(77," API as the "),e.TgZ(78,"i"),e._uU(79,"aria-label"),e.qZA(),e._uU(80," by default, this can be overriden with the "),e.TgZ(81,"i"),e._uU(82,"closeButtonProps"),e.qZA(),e._uU(83,"."),e.qZA()(),e._UZ(84,"app-code",2),e.TgZ(85,"h3"),e._uU(86,"Closed State Keyboard Support"),e.qZA(),e.TgZ(87,"div",3)(88,"table",4)(89,"thead")(90,"tr")(91,"th"),e._uU(92,"Key"),e.qZA(),e.TgZ(93,"th"),e._uU(94,"Function"),e.qZA()()(),e.TgZ(95,"tbody")(96,"tr")(97,"td")(98,"i"),e._uU(99,"tab"),e.qZA()(),e.TgZ(100,"td"),e._uU(101,"Moves focus to the multiselect element."),e.qZA()(),e.TgZ(102,"tr")(103,"td")(104,"i"),e._uU(105,"space"),e.qZA()(),e.TgZ(106,"td"),e._uU(107,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus."),e.qZA()(),e.TgZ(108,"tr")(109,"td")(110,"i"),e._uU(111,"down arrow"),e.qZA()(),e.TgZ(112,"td"),e._uU(113,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus."),e.qZA()(),e.TgZ(114,"tr")(115,"td")(116,"i"),e._uU(117,"up arrow"),e.qZA()(),e.TgZ(118,"td"),e._uU(119,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus."),e.qZA()()()()(),e.TgZ(120,"h3"),e._uU(121,"Popup Keyboard Support"),e.qZA(),e.TgZ(122,"div",3)(123,"table",4)(124,"thead")(125,"tr")(126,"th"),e._uU(127,"Key"),e.qZA(),e.TgZ(128,"th"),e._uU(129,"Function"),e.qZA()()(),e.TgZ(130,"tbody")(131,"tr")(132,"td")(133,"i"),e._uU(134,"tab"),e.qZA()(),e.TgZ(135,"td"),e._uU(136,"Moves focus to the next focusable element in the popup, if there is none then first focusable element receives the focus."),e.qZA()(),e.TgZ(137,"tr")(138,"td")(139,"i"),e._uU(140,"shift"),e.qZA(),e._uU(141," + "),e.TgZ(142,"i"),e._uU(143,"tab"),e.qZA()(),e.TgZ(144,"td"),e._uU(145,"Moves focus to the previous focusable element in the popup, if there is none then last focusable element receives the focus."),e.qZA()(),e.TgZ(146,"tr")(147,"td")(148,"i"),e._uU(149,"enter"),e.qZA()(),e.TgZ(150,"td"),e._uU(151,"Toggles the selection state of the focused option."),e.qZA()(),e.TgZ(152,"tr")(153,"td")(154,"i"),e._uU(155,"space"),e.qZA()(),e.TgZ(156,"td"),e._uU(157,"Toggles the selection state of the focused option."),e.qZA()(),e.TgZ(158,"tr")(159,"td")(160,"i"),e._uU(161,"escape"),e.qZA()(),e.TgZ(162,"td"),e._uU(163,"Closes the popup, moves focus to the multiselect element."),e.qZA()(),e.TgZ(164,"tr")(165,"td")(166,"i"),e._uU(167,"down arrow"),e.qZA()(),e.TgZ(168,"td"),e._uU(169,"Moves focus to the next option, if there is none then visual focus does not change."),e.qZA()(),e.TgZ(170,"tr")(171,"td")(172,"i"),e._uU(173,"up arrow"),e.qZA()(),e.TgZ(174,"td"),e._uU(175,"Moves focus to the previous option, if there is none then visual focus does not change."),e.qZA()(),e.TgZ(176,"tr")(177,"td")(178,"i"),e._uU(179,"home"),e.qZA()(),e.TgZ(180,"td"),e._uU(181,"Moves focus to the first option."),e.qZA()(),e.TgZ(182,"tr")(183,"td")(184,"i"),e._uU(185,"end"),e.qZA()(),e.TgZ(186,"td"),e._uU(187,"Moves focus to the last option."),e.qZA()(),e.TgZ(188,"tr")(189,"td")(190,"i"),e._uU(191,"any printable character"),e.qZA()(),e.TgZ(192,"td"),e._uU(193,"Moves focus to the option whose label starts with the characters being typed if dropdown is not editable."),e.qZA()()()()(),e.TgZ(194,"h3"),e._uU(195,"Toggle All Checkbox Keyboard Support"),e.qZA(),e.TgZ(196,"div",3)(197,"table",4)(198,"thead")(199,"tr")(200,"th"),e._uU(201,"Key"),e.qZA(),e.TgZ(202,"th"),e._uU(203,"Function"),e.qZA()()(),e.TgZ(204,"tbody")(205,"tr")(206,"td")(207,"i"),e._uU(208,"space"),e.qZA()(),e.TgZ(209,"td"),e._uU(210,"Toggles the checked state."),e.qZA()(),e.TgZ(211,"tr")(212,"td")(213,"i"),e._uU(214,"escape"),e.qZA()(),e.TgZ(215,"td"),e._uU(216,"Closes the popup."),e.qZA()()()()(),e.TgZ(217,"h3"),e._uU(218,"Filter Input Keyboard Support"),e.qZA(),e.TgZ(219,"div",3)(220,"table",4)(221,"thead")(222,"tr")(223,"th"),e._uU(224,"Key"),e.qZA(),e.TgZ(225,"th"),e._uU(226,"Function"),e.qZA()()(),e.TgZ(227,"tbody")(228,"tr")(229,"td")(230,"i"),e._uU(231,"enter"),e.qZA()(),e.TgZ(232,"td"),e._uU(233,"Closes the popup and moves focus to the multiselect element."),e.qZA()(),e.TgZ(234,"tr")(235,"td")(236,"i"),e._uU(237,"escape"),e.qZA()(),e.TgZ(238,"td"),e._uU(239,"Closes the popup and moves focus to the multiselect element."),e.qZA()()()()(),e.TgZ(240,"h3"),e._uU(241,"Close Button Keyboard Support"),e.qZA(),e.TgZ(242,"div",3)(243,"table",4)(244,"thead")(245,"tr")(246,"th"),e._uU(247,"Key"),e.qZA(),e.TgZ(248,"th"),e._uU(249,"Function"),e.qZA()()(),e.TgZ(250,"tbody")(251,"tr")(252,"td")(253,"i"),e._uU(254,"enter"),e.qZA()(),e.TgZ(255,"td"),e._uU(256,"Closes the popup and moves focus to the multiselect element."),e.qZA()(),e.TgZ(257,"tr")(258,"td")(259,"i"),e._uU(260,"space"),e.qZA()(),e.TgZ(261,"td"),e._uU(262,"Closes the popup and moves focus to the multiselect element."),e.qZA()(),e.TgZ(263,"tr")(264,"td")(265,"i"),e._uU(266,"escape"),e.qZA()(),e.TgZ(267,"td"),e._uU(268,"Closes the popup and moves focus to the multiselect element."),e.qZA()()()()()()()),2&i&&(e.xp6(2),e.Q6J("title",o.title)("id",o.id),e.xp6(82),e.Q6J("code",o.code)("hideToggleCode",!0)("hideCodeSandbox",!0)("hideStackBlitz",!0))},dependencies:[s.h,d.c,A.N],encapsulation:2}),t})(),b=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="cities" [(ngModel)]="selectedCities" optionLabel="name"></p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" optionLabel="name"></p-multiSelect>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-basic-demo',\n    templateUrl: './multi-select-basic-demo.html'\n})\nexport class MultiSelectBasicDemo implements OnInit {\n\n    cities: City[];\n\n    selectedCities: City[];\n\n    ngOnInit() {\n        this.cities = [\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ];\n    }\n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["basic-doc"]],inputs:{id:"id",title:"title"},decls:43,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","name",3,"options","ngModel","ngModelChange"],["selector","multi-select-basic-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3," MultiSelect is used as a controlled component with "),e.TgZ(4,"i"),e._uU(5,"ngModel"),e.qZA(),e._uU(6," property along with an "),e.TgZ(7,"i"),e._uU(8,"options"),e.qZA(),e._uU(9," collection. Label and value of an option are defined with the "),e.TgZ(10,"i"),e._uU(11,"optionLabel"),e.qZA(),e._uU(12," and "),e.TgZ(13,"i"),e._uU(14,"optionValue"),e.qZA(),e._uU(15," properties respectively. Default property name for the "),e.TgZ(16,"i"),e._uU(17,"optionLabel"),e.qZA(),e._uU(18," is "),e.TgZ(19,"i"),e._uU(20,"label"),e.qZA(),e._uU(21," and "),e.TgZ(22,"i"),e._uU(23,"value"),e.qZA(),e._uU(24," for the "),e.TgZ(25,"i"),e._uU(26,"optionValue"),e.qZA(),e._uU(27,". If "),e.TgZ(28,"i"),e._uU(29,"optionValue"),e.qZA(),e._uU(30," is omitted and the object has no "),e.TgZ(31,"i"),e._uU(32,"value"),e.qZA(),e._uU(33," property, the object itself becomes the value of an option. Note that, when options are simple primitive values such as a string array, no "),e.TgZ(34,"i"),e._uU(35,"optionLabel"),e.qZA(),e._uU(36," and "),e.TgZ(37,"i"),e._uU(38,"optionValue"),e.qZA(),e._uU(39," would be necessary. "),e.qZA()(),e.TgZ(40,"div",1)(41,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.qZA()(),e._UZ(42,"app-code",3),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(40),e.Q6J("options",o.cities)("ngModel",o.selectedCities),e.xp6(1),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n.JJ,n.On,d.c],encapsulation:2}),t})(),v=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="cities" [(ngModel)]="selectedCities" defaultLabel="Select a City" optionLabel="name" display="chip"></p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" defaultLabel="Select a City" optionLabel="name" display="chip"></p-multiSelect>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-chips-demo',\n    templateUrl: './multi-select-chips-demo.html'\n})\nexport class MultiSelectChipsDemo implements OnInit {\n    cities: City[];\n\n    selectedCities: City[];\n\n    constructor() {\n        this.cities = [\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ];\n    }\n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["chips-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["defaultLabel","Select a City","optionLabel","name","display","chip",3,"options","ngModel","ngModelChange"],["selector","multi-select-chips-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Selected values are displayed as a comma separated list by default, setting "),e.TgZ(4,"i"),e._uU(5,"display"),e.qZA(),e._uU(6," as "),e.TgZ(7,"i"),e._uU(8,"chip"),e.qZA(),e._uU(9," displays them as chips."),e.qZA()(),e.TgZ(10,"div",1)(11,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.qZA()(),e._UZ(12,"app-code",3),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(10),e.Q6J("options",o.cities)("ngModel",o.selectedCities),e.xp6(1),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n.JJ,n.On,d.c],encapsulation:2}),t})(),y=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="cities" [(ngModel)]="selectedCities" [disabled]="true" optionLabel="name"></p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" [disabled]="true" optionLabel="name"></p-multiSelect>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-disabled-demo',\n    templateUrl: './multi-select-disabled-demo.html'\n})\nexport class MultiSelectDisabledDemo implements OnInit {\n    cities: City[];\n\n    selectedCities: City[];\n\n    ngOnInit() {\n        this.cities = [\n            { name: 'New York', code: 'NY' },\n            { name: 'Rome', code: 'RM' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Paris', code: 'PRS' }\n        ];\n    }\n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["disabled-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:6,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","name",3,"options","ngModel","disabled","ngModelChange"],["selector","multi-select-disabled-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"When "),e.TgZ(4,"i"),e._uU(5,"disabled"),e.qZA(),e._uU(6," is present, the element cannot be edited and focused."),e.qZA()(),e.TgZ(7,"div",1)(8,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.qZA()(),e._UZ(9,"app-code",3),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("options",o.cities)("ngModel",o.selectedCities)("disabled",!0),e.xp6(1),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n.JJ,n.On,d.c],encapsulation:2}),t})(),C=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["events-doc"]],inputs:{id:"id",title:"title"},decls:94,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(i,o){1&i&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Parameters"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Description"),e.qZA()()(),e.TgZ(12,"tbody")(13,"tr")(14,"td"),e._uU(15,"onClick"),e.qZA(),e.TgZ(16,"td"),e._uU(17," event.originalEvent: Browser click event event.option: selected option "),e._UZ(18,"br"),e._uU(19," event.selected: selected value "),e._UZ(20,"br"),e.qZA(),e.TgZ(21,"td"),e._uU(22,"Callback to invoke when component is clicked."),e.qZA()(),e.TgZ(23,"tr")(24,"td"),e._uU(25,"onChange"),e.qZA(),e.TgZ(26,"td"),e._uU(27," event.originalEvent: browser event"),e._UZ(28,"br"),e._uU(29," event.value: Current selected values"),e._UZ(30,"br"),e._uU(31," event.itemValue: Toggled item value "),e.qZA(),e.TgZ(32,"td"),e._uU(33,"Callback to invoke when value changes."),e.qZA()(),e.TgZ(34,"tr")(35,"td"),e._uU(36,"onFilter"),e.qZA(),e.TgZ(37,"td"),e._uU(38," event.originalEvent: Browser event "),e._UZ(39,"br"),e._uU(40," event.filter: Filter value used in filtering. "),e.qZA(),e.TgZ(41,"td"),e._uU(42,"Callback to invoke when data is filtered."),e.qZA()(),e.TgZ(43,"tr")(44,"td"),e._uU(45,"onFocus"),e.qZA(),e.TgZ(46,"td"),e._uU(47,"event.originalEvent: browser event"),e.qZA(),e.TgZ(48,"td"),e._uU(49,"Callback to invoke when multiselect receives focus."),e.qZA()(),e.TgZ(50,"tr")(51,"td"),e._uU(52,"onBlur"),e.qZA(),e.TgZ(53,"td"),e._uU(54,"event.originalEvent: browser event"),e.qZA(),e.TgZ(55,"td"),e._uU(56,"Callback to invoke when multiselect loses focus."),e.qZA()(),e.TgZ(57,"tr")(58,"td"),e._uU(59,"onPanelShow"),e.qZA(),e.TgZ(60,"td"),e._uU(61,"-"),e.qZA(),e.TgZ(62,"td"),e._uU(63,"Callback to invoke when overlay panel becomes visible."),e.qZA()(),e.TgZ(64,"tr")(65,"td"),e._uU(66,"onPanelHide"),e.qZA(),e.TgZ(67,"td"),e._uU(68,"-"),e.qZA(),e.TgZ(69,"td"),e._uU(70,"Callback to invoke when overlay panel becomes hidden."),e.qZA()(),e.TgZ(71,"tr")(72,"td"),e._uU(73,"onClear"),e.qZA(),e.TgZ(74,"td"),e._uU(75,"-"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"Callback to invoke when input field is cleared."),e.qZA()(),e.TgZ(78,"tr")(79,"td"),e._uU(80,"onLazyLoad"),e.qZA(),e.TgZ(81,"td"),e._uU(82," event.first: First index of the new data range to be loaded."),e._UZ(83,"br"),e._uU(84," event.last: Last index of the new data range to be loaded. "),e.qZA(),e.TgZ(85,"td"),e._uU(86,"Callback to invoke in lazy mode to load new data."),e.qZA()(),e.TgZ(87,"tr")(88,"td"),e._uU(89,"onRemove"),e.qZA(),e.TgZ(90,"td"),e._uU(91,"event: MultiselectOnRemoveEvent"),e.qZA(),e.TgZ(92,"td"),e._uU(93,"Callback to invoke in lazy mode to load new data."),e.qZA()()()()()()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id))},dependencies:[d.c],encapsulation:2}),t})(),S=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="cities" [(ngModel)]="selectedCities" [filter]="true" optionLabel="name"></p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" [filter]="true" optionLabel="name"></p-multiSelect>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-filter-demo',\n    templateUrl: './multi-select-filter-demo.html'\n})\nexport class MultiSelectFilterDemo implements OnInit {\n    cities: City[];\n\n    selectedCities: City[];\n\n    ngOnInit() {\n        this.cities = [\n            { name: 'New York', code: 'NY' },\n            { name: 'Rome', code: 'RM' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Paris', code: 'PRS' }\n        ];\n    }\n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["filter-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:6,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","name",3,"options","ngModel","filter","ngModelChange"],["selector","multi-select-filter-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"MultiSelect provides built-in filtering that is enabled by adding the "),e.TgZ(4,"i"),e._uU(5,"filter"),e.qZA(),e._uU(6," property."),e.qZA()(),e.TgZ(7,"div",1)(8,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.qZA()(),e._UZ(9,"app-code",3),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("options",o.cities)("ngModel",o.selectedCities)("filter",!0),e.xp6(1),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n.JJ,n.On,d.c],encapsulation:2}),t})(),D=(()=>{class t{constructor(){this.code={basic:'\n<span class="p-float-label">\n    <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" optionLabel="name"></p-multiSelect>\n    <label for="ms-cities">Select Cities</label>\n</span>',html:'\n<div class="card flex justify-content-center">\n    <span class="p-float-label">\n        <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" optionLabel="name"></p-multiSelect>\n        <label for="ms-cities">Select Cities</label>\n    </span>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-floatlabel-demo',\n    templateUrl: './multi-select-floatlabel-demo.html'\n})\nexport class MultiSelectFloatlabelDemo implements OnInit {\n    cities: City[];\n\n    selectedCities: City[];\n\n    ngOnInit() {\n        this.cities = [\n            { name: 'New York', code: 'NY' },\n            { name: 'Rome', code: 'RM' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Paris', code: 'PRS' }\n        ];\n    }\n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["floatlabel-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],[1,"p-float-label"],["optionLabel","name",3,"options","ngModel","ngModelChange"],["for","ms-cities"],["selector","multi-select-floatlabel-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"A floating label appears on top of the input field when focused."),e.qZA()(),e.TgZ(4,"div",1)(5,"span",2)(6,"p-multiSelect",3),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.qZA(),e.TgZ(7,"label",4),e._uU(8,"Select Cities"),e.qZA()()(),e._UZ(9,"app-code",5),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(5),e.Q6J("options",o.cities)("ngModel",o.selectedCities),e.xp6(3),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n.JJ,n.On,d.c],encapsulation:2}),t})();var T=a(20485);function w(t,l){if(1&t&&(e.TgZ(0,"div",5),e._UZ(1,"img",6),e.TgZ(2,"span"),e._uU(3),e.qZA()()),2&t){const i=l.$implicit;e.xp6(1),e.Tol("mr-2 flag flag-"+i.value),e.xp6(2),e.Oqu(i.label)}}let M=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="groupedCities" [group]="true" [(ngModel)]="selectedCities" defaultLabel="Select a City" scrollHeight="250px" display="chip">\n    <ng-template let-group pTemplate="group">\n        <div class="flex align-items-center">\n            <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'mr-2 flag flag-\' + group.value" style="width: 20px" />\n            <span>{{ group.label }}</span>\n        </div>\n    </ng-template>\n</p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="groupedCities" [group]="true" [(ngModel)]="selectedCities" defaultLabel="Select a City" scrollHeight="250px" display="chip">\n        <ng-template let-group pTemplate="group">\n            <div class="flex align-items-center">\n                <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'mr-2 flag flag-\' + group.value" style="width: 20px" />\n                <span>{{ group.label }}</span>\n            </div>\n        </ng-template>\n    </p-multiSelect>\n</div>',typescript:"\nimport { Component } from '@angular/core';\nimport { SelectItemGroup } from 'primeng/api';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-group-demo',\n    templateUrl: './multi-select-group-demo.html'\n})\nexport class MultiSelectGroupDemo {\n    groupedCities: SelectItemGroup[];\n\n    selectedCities: City[];\n\n    constructor() {\n        this.groupedCities = [\n            {\n                label: 'Germany',\n                value: 'de',\n                items: [\n                    { label: 'Berlin', value: 'Berlin' },\n                    { label: 'Frankfurt', value: 'Frankfurt' },\n                    { label: 'Hamburg', value: 'Hamburg' },\n                    { label: 'Munich', value: 'Munich' }\n                ]\n            },\n            {\n                label: 'USA',\n                value: 'us',\n                items: [\n                    { label: 'Chicago', value: 'Chicago' },\n                    { label: 'Los Angeles', value: 'Los Angeles' },\n                    { label: 'New York', value: 'New York' },\n                    { label: 'San Francisco', value: 'San Francisco' }\n                ]\n            },\n            {\n                label: 'Japan',\n                value: 'jp',\n                items: [\n                    { label: 'Kyoto', value: 'Kyoto' },\n                    { label: 'Osaka', value: 'Osaka' },\n                    { label: 'Tokyo', value: 'Tokyo' },\n                    { label: 'Yokohama', value: 'Yokohama' }\n                ]\n            }\n        ];\n    }\n}"},this.groupedCities=[{label:"Germany",value:"de",items:[{label:"Berlin",value:"Berlin"},{label:"Frankfurt",value:"Frankfurt"},{label:"Hamburg",value:"Hamburg"},{label:"Munich",value:"Munich"}]},{label:"USA",value:"us",items:[{label:"Chicago",value:"Chicago"},{label:"Los Angeles",value:"Los Angeles"},{label:"New York",value:"New York"},{label:"San Francisco",value:"San Francisco"}]},{label:"Japan",value:"jp",items:[{label:"Kyoto",value:"Kyoto"},{label:"Osaka",value:"Osaka"},{label:"Tokyo",value:"Tokyo"},{label:"Yokohama",value:"Yokohama"}]}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["group-doc"]],inputs:{id:"id",title:"title"},decls:8,vars:6,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["defaultLabel","Select a City","scrollHeight","250px","display","chip",3,"options","group","ngModel","ngModelChange"],["pTemplate","group"],["selector","multi-select-group-demo",3,"code"],[1,"flex","align-items-center"],["src","https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png",2,"width","20px"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Options can be grouped when a nested data structures is provided."),e.qZA()(),e.TgZ(4,"div",1)(5,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.YNc(6,w,4,3,"ng-template",3),e.qZA()(),e._UZ(7,"app-code",4),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(4),e.Q6J("options",o.groupedCities)("group",!0)("ngModel",o.selectedCities),e.xp6(2),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,T.jx,n.JJ,n.On,d.c],encapsulation:2}),t})(),I=(()=>{class t{constructor(){this.code={typescript:"import { MultiSelectModule } from 'primeng/multiselect';"}}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[3,"title","id"],[3,"code","hideToggleCode"]],template:function(i,o){1&i&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0)(2,"app-code",1),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(1),e.Q6J("code",o.code)("hideToggleCode",!0))},dependencies:[s.h,d.c],encapsulation:2}),t})(),L=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="cities" [(ngModel)]="selectedCities" class="ng-dirty ng-invalid" optionLabel="name"></p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="cities" [(ngModel)]="selectedCities" class="ng-dirty ng-invalid" optionLabel="name"></p-multiSelect>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface City {\n    name: string,\n    code: string\n}\n\n@Component({\n    selector: 'multi-select-invalid-demo',\n    templateUrl: './multi-select-invalid-demo.html'\n})\nexport class MultiSelectInvalidDemo implements OnInit {\n    cities: City[];\n\n    selectedCities: City[];\n\n    ngOnInit() {\n        this.cities = [\n            { name: 'New York', code: 'NY' },\n            { name: 'Rome', code: 'RM' },\n            { name: 'London', code: 'LDN' },\n            { name: 'Istanbul', code: 'IST' },\n            { name: 'Paris', code: 'PRS' }\n        ];\n    }\n}"}}ngOnInit(){this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["invalid-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","name",1,"ng-dirty","ng-invalid",3,"options","ngModel","ngModelChange"],["selector","multi-select-invalid-demo",3,"code"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Invalid state style is added using the "),e.TgZ(4,"i"),e._uU(5,"ng-invalid"),e.qZA(),e._uU(6," and "),e.TgZ(7,"i"),e._uU(8,"ng-dirty"),e.qZA(),e._uU(9," class to indicate a failed validation."),e.qZA()(),e.TgZ(10,"div",1)(11,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCities=c}),e.qZA()(),e._UZ(12,"app-code",3),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(10),e.Q6J("options",o.cities)("ngModel",o.selectedCities),e.xp6(1),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,n.JJ,n.On,d.c],encapsulation:2}),t})();const x=function(){return["/scroller"]},N=function(){return["/overlay"]};let J=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["props-doc"]],inputs:{id:"id",title:"title"},decls:543,vars:6,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"],["href","#",3,"routerLink"]],template:function(i,o){1&i&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Type"),e.qZA(),e.TgZ(10,"th"),e._uU(11,"Default"),e.qZA(),e.TgZ(12,"th"),e._uU(13,"Description"),e.qZA()()(),e.TgZ(14,"tbody")(15,"tr")(16,"td"),e._uU(17,"appendTo"),e.qZA(),e.TgZ(18,"td"),e._uU(19,"any"),e.qZA(),e.TgZ(20,"td"),e._uU(21,"null"),e.qZA(),e.TgZ(22,"td"),e._uU(23,' Target element to attach the overlay, valid values are "body" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]="mydiv" for a div element having #mydiv as variable name). '),e.qZA()(),e.TgZ(24,"tr")(25,"td"),e._uU(26,"ariaFilterLabel"),e.qZA(),e.TgZ(27,"td"),e._uU(28,"string"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"null"),e.qZA(),e.TgZ(31,"td"),e._uU(32,"Defines a string that labels the filter input."),e.qZA()(),e.TgZ(33,"tr")(34,"td"),e._uU(35,"label"),e.qZA(),e.TgZ(36,"td"),e._uU(37,"string"),e.qZA(),e.TgZ(38,"td"),e._uU(39,"null"),e.qZA(),e.TgZ(40,"td"),e._uU(41,"Label of the input for accessibility."),e.qZA()(),e.TgZ(42,"tr")(43,"td"),e._uU(44,"ariaLabelledBy"),e.qZA(),e.TgZ(45,"td"),e._uU(46,"string"),e.qZA(),e.TgZ(47,"td"),e._uU(48,"null"),e.qZA(),e.TgZ(49,"td"),e._uU(50,"Establishes relationships between the component and label(s) where its value should be one or more element IDs."),e.qZA()(),e.TgZ(51,"tr")(52,"td"),e._uU(53,"autofocusFilter"),e.qZA(),e.TgZ(54,"td"),e._uU(55,"boolean"),e.qZA(),e.TgZ(56,"td"),e._uU(57,"false"),e.qZA(),e.TgZ(58,"td"),e._uU(59,"Applies focus to the filter element when the overlay is shown."),e.qZA()(),e.TgZ(60,"tr")(61,"td"),e._uU(62,"autoZIndex"),e.qZA(),e.TgZ(63,"td"),e._uU(64,"boolean"),e.qZA(),e.TgZ(65,"td"),e._uU(66,"true"),e.qZA(),e.TgZ(67,"td"),e._uU(68,"Whether to automatically manage layering."),e.qZA()(),e.TgZ(69,"tr")(70,"td"),e._uU(71,"baseZIndex"),e.qZA(),e.TgZ(72,"td"),e._uU(73,"number"),e.qZA(),e.TgZ(74,"td"),e._uU(75,"0"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"Base zIndex value to use in layering."),e.qZA()(),e.TgZ(78,"tr")(79,"td"),e._uU(80,"defaultLabel"),e.qZA(),e.TgZ(81,"td"),e._uU(82,"string"),e.qZA(),e.TgZ(83,"td"),e._uU(84,"Choose"),e.qZA(),e.TgZ(85,"td"),e._uU(86,"Label to display when there are no selections. Deprecated: Use placeholder instead."),e.qZA()(),e.TgZ(87,"tr")(88,"td"),e._uU(89,"dataKey"),e.qZA(),e.TgZ(90,"td"),e._uU(91,"string"),e.qZA(),e.TgZ(92,"td"),e._uU(93,"null"),e.qZA(),e.TgZ(94,"td"),e._uU(95,"A property to uniquely identify a value in options."),e.qZA()(),e.TgZ(96,"tr")(97,"td"),e._uU(98,"disabled"),e.qZA(),e.TgZ(99,"td"),e._uU(100,"boolean"),e.qZA(),e.TgZ(101,"td"),e._uU(102,"false"),e.qZA(),e.TgZ(103,"td"),e._uU(104,"When present, it specifies that the element should be disabled."),e.qZA()(),e.TgZ(105,"tr")(106,"td"),e._uU(107,"displaySelectedLabel"),e.qZA(),e.TgZ(108,"td"),e._uU(109,"boolean"),e.qZA(),e.TgZ(110,"td"),e._uU(111,"true"),e.qZA(),e.TgZ(112,"td"),e._uU(113,"Whether to show labels of selected item labels or use default label."),e.qZA()(),e.TgZ(114,"tr")(115,"td"),e._uU(116,"dropdownIcon"),e.qZA(),e.TgZ(117,"td"),e._uU(118,"string"),e.qZA(),e.TgZ(119,"td"),e._uU(120,"null"),e.qZA(),e.TgZ(121,"td"),e._uU(122,"Icon class of the dropdown icon."),e.qZA()(),e.TgZ(123,"tr")(124,"td"),e._uU(125,"emptyFilterMessage"),e.qZA(),e.TgZ(126,"td"),e._uU(127,"string"),e.qZA(),e.TgZ(128,"td"),e._uU(129,"No results found"),e.qZA(),e.TgZ(130,"td"),e._uU(131,"Text to display when filtering does not return any results."),e.qZA()(),e.TgZ(132,"tr")(133,"td"),e._uU(134,"filter"),e.qZA(),e.TgZ(135,"td"),e._uU(136,"boolean"),e.qZA(),e.TgZ(137,"td"),e._uU(138,"true"),e.qZA(),e.TgZ(139,"td"),e._uU(140,"When specified, displays an input field to filter the items on keyup."),e.qZA()(),e.TgZ(141,"tr")(142,"td"),e._uU(143,"filterMatchMode"),e.qZA(),e.TgZ(144,"td"),e._uU(145,"string"),e.qZA(),e.TgZ(146,"td"),e._uU(147,"contains"),e.qZA(),e.TgZ(148,"td"),e._uU(149,'Defines how the items are filtered, valid values are "contains" (default) "startsWith", "endsWith", "equals", "notEquals", "in", "lt", "lte", "gt" and "gte".'),e.qZA()(),e.TgZ(150,"tr")(151,"td"),e._uU(152,"filterValue"),e.qZA(),e.TgZ(153,"td"),e._uU(154,"string"),e.qZA(),e.TgZ(155,"td"),e._uU(156,"null"),e.qZA(),e.TgZ(157,"td"),e._uU(158,"When specified, filter displays with this value."),e.qZA()(),e.TgZ(159,"tr")(160,"td"),e._uU(161,"filterLocale"),e.qZA(),e.TgZ(162,"td"),e._uU(163,"string"),e.qZA(),e.TgZ(164,"td"),e._uU(165,"undefined"),e.qZA(),e.TgZ(166,"td"),e._uU(167,"Locale to use in filtering. The default locale is the host environment's current locale."),e.qZA()(),e.TgZ(168,"tr")(169,"td"),e._uU(170,"filterBy"),e.qZA(),e.TgZ(171,"td"),e._uU(172,"string"),e.qZA(),e.TgZ(173,"td"),e._uU(174,"null"),e.qZA(),e.TgZ(175,"td"),e._uU(176,"When filtering is enabled, filterBy decides which field or fields (comma separated) to search against."),e.qZA()(),e.TgZ(177,"tr")(178,"td"),e._uU(179,"filterPlaceHolder"),e.qZA(),e.TgZ(180,"td"),e._uU(181,"string"),e.qZA(),e.TgZ(182,"td"),e._uU(183,"null"),e.qZA(),e.TgZ(184,"td"),e._uU(185,"Defines placeholder of the filter input."),e.qZA()(),e.TgZ(186,"tr")(187,"td"),e._uU(188,"hideTransitionOptions"),e.qZA(),e.TgZ(189,"td"),e._uU(190,"string"),e.qZA(),e.TgZ(191,"td"),e._uU(192,".1s linear"),e.qZA(),e.TgZ(193,"td"),e._uU(194,"Transition options of the hide animation."),e.qZA()(),e.TgZ(195,"tr")(196,"td"),e._uU(197,"inputId"),e.qZA(),e.TgZ(198,"td"),e._uU(199,"string"),e.qZA(),e.TgZ(200,"td"),e._uU(201,"null"),e.qZA(),e.TgZ(202,"td"),e._uU(203,"Identifier of the focus input to match a label defined for the component."),e.qZA()(),e.TgZ(204,"tr")(205,"td"),e._uU(206,"maxSelectedLabels"),e.qZA(),e.TgZ(207,"td"),e._uU(208,"number"),e.qZA(),e.TgZ(209,"td"),e._uU(210,"3"),e.qZA(),e.TgZ(211,"td"),e._uU(212,"Decides how many selected item labels to show at most."),e.qZA()(),e.TgZ(213,"tr")(214,"td"),e._uU(215,"name"),e.qZA(),e.TgZ(216,"td"),e._uU(217,"string"),e.qZA(),e.TgZ(218,"td"),e._uU(219,"null"),e.qZA(),e.TgZ(220,"td"),e._uU(221,"Name of the input element."),e.qZA()(),e.TgZ(222,"tr")(223,"td"),e._uU(224,"options"),e.qZA(),e.TgZ(225,"td"),e._uU(226,"array"),e.qZA(),e.TgZ(227,"td"),e._uU(228,"null"),e.qZA(),e.TgZ(229,"td"),e._uU(230,"An array of objects to display as the available options."),e.qZA()(),e.TgZ(231,"tr")(232,"td"),e._uU(233,"optionLabel"),e.qZA(),e.TgZ(234,"td"),e._uU(235,"string"),e.qZA(),e.TgZ(236,"td"),e._uU(237,"label"),e.qZA(),e.TgZ(238,"td"),e._uU(239,"Name of the label field of an option."),e.qZA()(),e.TgZ(240,"tr")(241,"td"),e._uU(242,"optionValue"),e.qZA(),e.TgZ(243,"td"),e._uU(244,"string"),e.qZA(),e.TgZ(245,"td"),e._uU(246,"value"),e.qZA(),e.TgZ(247,"td"),e._uU(248,"Name of the value field of an option."),e.qZA()(),e.TgZ(249,"tr")(250,"td"),e._uU(251,"optionDisabled"),e.qZA(),e.TgZ(252,"td"),e._uU(253,"string"),e.qZA(),e.TgZ(254,"td"),e._uU(255,"disabled"),e.qZA(),e.TgZ(256,"td"),e._uU(257,"Name of the disabled field of an option."),e.qZA()(),e.TgZ(258,"tr")(259,"td"),e._uU(260,"optionGroupLabel"),e.qZA(),e.TgZ(261,"td"),e._uU(262,"string"),e.qZA(),e.TgZ(263,"td"),e._uU(264,"label"),e.qZA(),e.TgZ(265,"td"),e._uU(266,"Name of the label field of an option group."),e.qZA()(),e.TgZ(267,"tr")(268,"td"),e._uU(269,"optionGroupChildren"),e.qZA(),e.TgZ(270,"td"),e._uU(271,"string"),e.qZA(),e.TgZ(272,"td"),e._uU(273,"items"),e.qZA(),e.TgZ(274,"td"),e._uU(275,"Name of the options field of an option group."),e.qZA()(),e.TgZ(276,"tr")(277,"td"),e._uU(278,"group"),e.qZA(),e.TgZ(279,"td"),e._uU(280,"boolean"),e.qZA(),e.TgZ(281,"td"),e._uU(282,"false"),e.qZA(),e.TgZ(283,"td"),e._uU(284,"Whether to display options as grouped when nested options are provided."),e.qZA()(),e.TgZ(285,"tr")(286,"td"),e._uU(287,"overlayVisible"),e.qZA(),e.TgZ(288,"td"),e._uU(289,"boolean"),e.qZA(),e.TgZ(290,"td"),e._uU(291,"false"),e.qZA(),e.TgZ(292,"td"),e._uU(293,"Specifies the visibility of the options panel."),e.qZA()(),e.TgZ(294,"tr")(295,"td"),e._uU(296,"panelStyle"),e.qZA(),e.TgZ(297,"td"),e._uU(298,"object"),e.qZA(),e.TgZ(299,"td"),e._uU(300,"null"),e.qZA(),e.TgZ(301,"td"),e._uU(302,"Inline style of the overlay panel."),e.qZA()(),e.TgZ(303,"tr")(304,"td"),e._uU(305,"placeholder"),e.qZA(),e.TgZ(306,"td"),e._uU(307,"string"),e.qZA(),e.TgZ(308,"td"),e._uU(309,"null"),e.qZA(),e.TgZ(310,"td"),e._uU(311,"Label to display when there are no selections."),e.qZA()(),e.TgZ(312,"tr")(313,"td"),e._uU(314,"readonly"),e.qZA(),e.TgZ(315,"td"),e._uU(316,"boolean"),e.qZA(),e.TgZ(317,"td"),e._uU(318,"false"),e.qZA(),e.TgZ(319,"td"),e._uU(320,"When present, it specifies that the component cannot be edited."),e.qZA()(),e.TgZ(321,"tr")(322,"td"),e._uU(323,"emptyMessage"),e.qZA(),e.TgZ(324,"td"),e._uU(325,"string"),e.qZA(),e.TgZ(326,"td"),e._uU(327,"No records found."),e.qZA(),e.TgZ(328,"td"),e._uU(329,"Text to display when there is no data. Defaults to global value in i18n translation configuration."),e.qZA()(),e.TgZ(330,"tr")(331,"td"),e._uU(332,"emptyFilterMessage"),e.qZA(),e.TgZ(333,"td"),e._uU(334,"string"),e.qZA(),e.TgZ(335,"td"),e._uU(336,"No results found"),e.qZA(),e.TgZ(337,"td"),e._uU(338,"Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration."),e.qZA()(),e.TgZ(339,"tr")(340,"td"),e._uU(341,"resetFilterOnHide"),e.qZA(),e.TgZ(342,"td"),e._uU(343,"boolean"),e.qZA(),e.TgZ(344,"td"),e._uU(345,"false"),e.qZA(),e.TgZ(346,"td"),e._uU(347,"Clears the filter value when hiding the dropdown."),e.qZA()(),e.TgZ(348,"tr")(349,"td"),e._uU(350,"scrollHeight"),e.qZA(),e.TgZ(351,"td"),e._uU(352,"string"),e.qZA(),e.TgZ(353,"td"),e._uU(354,"200px"),e.qZA(),e.TgZ(355,"td"),e._uU(356,"Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value."),e.qZA()(),e.TgZ(357,"tr")(358,"td"),e._uU(359,"selectedItemsLabel"),e.qZA(),e.TgZ(360,"td"),e._uU(361,"string"),e.qZA(),e.TgZ(362,"td"),e._uU(363,"ellipsis"),e.qZA(),e.TgZ(364,"td"),e._uU(365,'Label to display after exceeding max selected labels e.g. ({0} items selected), defaults "ellipsis" keyword to indicate a text-overflow.'),e.qZA()(),e.TgZ(366,"tr")(367,"td"),e._uU(368,"selectionLimit"),e.qZA(),e.TgZ(369,"td"),e._uU(370,"number"),e.qZA(),e.TgZ(371,"td"),e._uU(372,"null"),e.qZA(),e.TgZ(373,"td"),e._uU(374,"Number of maximum options that can be selected."),e.qZA()(),e.TgZ(375,"tr")(376,"td"),e._uU(377,"showHeader"),e.qZA(),e.TgZ(378,"td"),e._uU(379,"boolean"),e.qZA(),e.TgZ(380,"td"),e._uU(381,"true"),e.qZA(),e.TgZ(382,"td"),e._uU(383,"Whether to show the header."),e.qZA()(),e.TgZ(384,"tr")(385,"td"),e._uU(386,"showTransitionOptions"),e.qZA(),e.TgZ(387,"td"),e._uU(388,"string"),e.qZA(),e.TgZ(389,"td"),e._uU(390,".12s cubic-bezier(0, 0, 0.2, 1)"),e.qZA(),e.TgZ(391,"td"),e._uU(392,"Transition options of the show animation."),e.qZA()(),e.TgZ(393,"tr")(394,"td"),e._uU(395,"showToggleAll"),e.qZA(),e.TgZ(396,"td"),e._uU(397,"boolean"),e.qZA(),e.TgZ(398,"td"),e._uU(399,"true"),e.qZA(),e.TgZ(400,"td"),e._uU(401,"Whether to show the checkbox at header to toggle all items at once."),e.qZA()(),e.TgZ(402,"tr")(403,"td"),e._uU(404,"style"),e.qZA(),e.TgZ(405,"td"),e._uU(406,"object"),e.qZA(),e.TgZ(407,"td"),e._uU(408,"null"),e.qZA(),e.TgZ(409,"td"),e._uU(410,"Inline style of the element."),e.qZA()(),e.TgZ(411,"tr")(412,"td"),e._uU(413,"panelStyle"),e.qZA(),e.TgZ(414,"td"),e._uU(415,"string"),e.qZA(),e.TgZ(416,"td"),e._uU(417,"null"),e.qZA(),e.TgZ(418,"td"),e._uU(419,"Inline style of the overlay panel element."),e.qZA()(),e.TgZ(420,"tr")(421,"td"),e._uU(422,"styleClass"),e.qZA(),e.TgZ(423,"td"),e._uU(424,"string"),e.qZA(),e.TgZ(425,"td"),e._uU(426,"null"),e.qZA(),e.TgZ(427,"td"),e._uU(428,"Style class of the element."),e.qZA()(),e.TgZ(429,"tr")(430,"td"),e._uU(431,"panelStyleClass"),e.qZA(),e.TgZ(432,"td"),e._uU(433,"string"),e.qZA(),e.TgZ(434,"td"),e._uU(435,"null"),e.qZA(),e.TgZ(436,"td"),e._uU(437,"Style class of the overlay panel element."),e.qZA()(),e.TgZ(438,"tr")(439,"td"),e._uU(440,"tabindex"),e.qZA(),e.TgZ(441,"td"),e._uU(442,"number"),e.qZA(),e.TgZ(443,"td"),e._uU(444,"null"),e.qZA(),e.TgZ(445,"td"),e._uU(446,"Index of the element in tabbing order."),e.qZA()(),e.TgZ(447,"tr")(448,"td"),e._uU(449,"tooltip"),e.qZA(),e.TgZ(450,"td"),e._uU(451,"any"),e.qZA(),e.TgZ(452,"td"),e._uU(453,"null"),e.qZA(),e.TgZ(454,"td"),e._uU(455,"Advisory information to display in a tooltip on hover."),e.qZA()(),e.TgZ(456,"tr")(457,"td"),e._uU(458,"tooltipStyleClass"),e.qZA(),e.TgZ(459,"td"),e._uU(460,"string"),e.qZA(),e.TgZ(461,"td"),e._uU(462,"null"),e.qZA(),e.TgZ(463,"td"),e._uU(464,"Style class of the tooltip."),e.qZA()(),e.TgZ(465,"tr")(466,"td"),e._uU(467,"tooltipPosition"),e.qZA(),e.TgZ(468,"td"),e._uU(469,"string"),e.qZA(),e.TgZ(470,"td"),e._uU(471,"top"),e.qZA(),e.TgZ(472,"td"),e._uU(473,"Position of the tooltip, valid values are right, left, top and bottom."),e.qZA()(),e.TgZ(474,"tr")(475,"td"),e._uU(476,"tooltipPositionStyle"),e.qZA(),e.TgZ(477,"td"),e._uU(478,"string"),e.qZA(),e.TgZ(479,"td"),e._uU(480,"absolute"),e.qZA(),e.TgZ(481,"td"),e._uU(482,"Type of CSS position."),e.qZA()(),e.TgZ(483,"tr")(484,"td"),e._uU(485,"showClear"),e.qZA(),e.TgZ(486,"td"),e._uU(487,"boolean"),e.qZA(),e.TgZ(488,"td"),e._uU(489,"false"),e.qZA(),e.TgZ(490,"td"),e._uU(491,"When enabled, a clear icon is displayed to clear the value."),e.qZA()(),e.TgZ(492,"tr")(493,"td"),e._uU(494,"virtualScroll"),e.qZA(),e.TgZ(495,"td"),e._uU(496,"boolean"),e.qZA(),e.TgZ(497,"td"),e._uU(498,"false"),e.qZA(),e.TgZ(499,"td"),e._uU(500,"Whether the data should be loaded on demand during scroll."),e.qZA()(),e.TgZ(501,"tr")(502,"td"),e._uU(503,"virtualScrollItemSize"),e.qZA(),e.TgZ(504,"td"),e._uU(505,"number"),e.qZA(),e.TgZ(506,"td"),e._uU(507,"null"),e.qZA(),e.TgZ(508,"td"),e._uU(509,"Height of an item in the list for VirtualScrolling."),e.qZA()(),e.TgZ(510,"tr")(511,"td"),e._uU(512,"virtualScrollOptions"),e.qZA(),e.TgZ(513,"td"),e._uU(514,"ScrollerOptions"),e.qZA(),e.TgZ(515,"td"),e._uU(516,"null"),e.qZA(),e.TgZ(517,"td"),e._uU(518,"Whether to use the scroller feature. The properties of "),e.TgZ(519,"a",3),e._uU(520,"scroller"),e.qZA(),e._uU(521," component can be used like an object in it."),e.qZA()(),e.TgZ(522,"tr")(523,"td"),e._uU(524,"overlayOptions"),e.qZA(),e.TgZ(525,"td"),e._uU(526,"OverlayOptions"),e.qZA(),e.TgZ(527,"td"),e._uU(528,"null"),e.qZA(),e.TgZ(529,"td"),e._uU(530,"Whether to use overlay API feature. The properties of "),e.TgZ(531,"a",3),e._uU(532,"overlay API"),e.qZA(),e._uU(533," can be used like an object in it."),e.qZA()(),e.TgZ(534,"tr")(535,"td"),e._uU(536,"lazy"),e.qZA(),e.TgZ(537,"td"),e._uU(538,"boolean"),e.qZA(),e.TgZ(539,"td"),e._uU(540,"false"),e.qZA(),e.TgZ(541,"td"),e._uU(542,"Defines if data is loaded and interacted with in lazy manner."),e.qZA()()()()()()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(518),e.Q6J("routerLink",e.DdM(4,x)),e.xp6(12),e.Q6J("routerLink",e.DdM(5,N)))},dependencies:[g.rH,d.c],encapsulation:2}),t})();const F=function(){return["/theming"]};let k=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["style-doc"]],inputs:{id:"id",title:"title"},decls:61,vars:4,consts:[[3,"title","id"],["href","#",3,"routerLink"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Following is the list of structural style classes, for theming classes visit "),e.TgZ(4,"a",1),e._uU(5,"theming"),e.qZA(),e._uU(6," page."),e.qZA()(),e.TgZ(7,"div",2)(8,"table",3)(9,"thead")(10,"tr")(11,"th"),e._uU(12,"Name"),e.qZA(),e.TgZ(13,"th"),e._uU(14,"Element"),e.qZA()()(),e.TgZ(15,"tbody")(16,"tr")(17,"td"),e._uU(18,"p-multiselect"),e.qZA(),e.TgZ(19,"td"),e._uU(20,"Container element."),e.qZA()(),e.TgZ(21,"tr")(22,"td"),e._uU(23,"p-multiselect-label-container"),e.qZA(),e.TgZ(24,"td"),e._uU(25,"Container of the label to display selected items."),e.qZA()(),e.TgZ(26,"tr")(27,"td"),e._uU(28,"p-multiselect-label"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"Label to display selected items."),e.qZA()(),e.TgZ(31,"tr")(32,"td"),e._uU(33,"p-multiselect-trigger"),e.qZA(),e.TgZ(34,"td"),e._uU(35,"Dropdown button."),e.qZA()(),e.TgZ(36,"tr")(37,"td"),e._uU(38,"p-multiselect-filter-container"),e.qZA(),e.TgZ(39,"td"),e._uU(40,"Container of filter input."),e.qZA()(),e.TgZ(41,"tr")(42,"td"),e._uU(43,"p-multiselect-panel"),e.qZA(),e.TgZ(44,"td"),e._uU(45,"Overlay panel for items."),e.qZA()(),e.TgZ(46,"tr")(47,"td"),e._uU(48,"p-multiselect-items"),e.qZA(),e.TgZ(49,"td"),e._uU(50,"List container of items."),e.qZA()(),e.TgZ(51,"tr")(52,"td"),e._uU(53,"p-multiselect-item"),e.qZA(),e.TgZ(54,"td"),e._uU(55,"An item in the list."),e.qZA()(),e.TgZ(56,"tr")(57,"td"),e._uU(58,"p-multiselect-open"),e.qZA(),e.TgZ(59,"td"),e._uU(60,"Container element when overlay is visible."),e.qZA()()()()()()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(3),e.Q6J("routerLink",e.DdM(3,F)))},dependencies:[g.rH,d.c],encapsulation:2}),t})();function O(t,l){if(1&t&&(e.TgZ(0,"div",8),e._UZ(1,"img",9),e.TgZ(2,"div"),e._uU(3),e.qZA()()),2&t){const i=l.$implicit;e.xp6(1),e.Tol("flag flag-"+i.code.toLowerCase()),e.xp6(2),e.Oqu(i.name)}}function R(t,l){1&t&&(e.TgZ(0,"div"),e._uU(1,"Select Countries"),e.qZA())}function P(t,l){if(1&t&&(e.YNc(0,O,4,3,"div",6),e.YNc(1,R,2,0,"div",7)),2&t){const i=e.oxw();e.Q6J("ngForOf",i.selectedCountries1),e.xp6(1),e.Q6J("ngIf",!i.selectedCountries1||0===i.selectedCountries1.length)}}function Q(t,l){if(1&t&&(e.TgZ(0,"div",8),e._UZ(1,"img",9),e.TgZ(2,"div"),e._uU(3),e.qZA()()),2&t){const i=l.$implicit;e.xp6(1),e.Tol("flag flag-"+i.code.toLowerCase()),e.xp6(2),e.Oqu(i.name)}}let Y=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="countries" [(ngModel)]="selectedCountries" defaultLabel="Select a Country" optionLabel="name" >\n        <ng-template let-value pTemplate="selectedItems">\n            <div class="flex align-items-center gap-2" *ngFor="let option of selectedCountries1">\n                <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'flag flag-\' + option.code.toLowerCase()" style="width: 18px"/>\n                <div>{{ option.name }}</div>\n            </div>\n            <div *ngIf="!selectedCountries1 || selectedCountries1.length === 0">Select Countries</div>\n        </ng-template>\n        <ng-template let-country pTemplate="item">\n            <div class="flex align-items-center gap-2">\n                <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'flag flag-\' + country.code.toLowerCase()" style="width: 18px"/>\n                <div>{{ country.name }}</div>\n            </div>\n        </ng-template>\n</p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="countries" [(ngModel)]="selectedCountries" defaultLabel="Select a Country" optionLabel="name" >\n        <ng-template let-value pTemplate="selectedItems">\n            <div class="flex align-items-center gap-2" *ngFor="let option of selectedCountries1">\n                <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'flag flag-\' + option.code.toLowerCase()" style="width: 18px"/>\n                <div>{{ option.name }}</div>\n            </div>\n            <div *ngIf="!selectedCountries1 || selectedCountries1.length === 0">Select Countries</div>\n        </ng-template>\n        <ng-template let-country pTemplate="item">\n            <div class="flex align-items-center gap-2">\n                <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'flag flag-\' + country.code.toLowerCase()" style="width: 18px"/>\n                <div>{{ country.name }}</div>\n            </div>\n        </ng-template>\n    </p-multiSelect>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\n\ninterface Country {\n    name: string;\n    code: string;\n}\n\n@Component({\n    selector: 'multi-select-template-demo',\n    templateUrl: './multi-select-template-demo.html'\n})\nexport class MultiSelectTemplateDemo implements OnInit {\n    countries: Country[];\n\n    selectedCountries: Country[];\n\n    constructor() {\n        this.countries = [\n            { name: 'Australia', code: 'AU' },\n            { name: 'Brazil', code: 'BR' },\n            { name: 'China', code: 'CN' },\n            { name: 'Egypt', code: 'EG' },\n            { name: 'France', code: 'FR' },\n            { name: 'Germany', code: 'DE' },\n            { name: 'India', code: 'IN' },\n            { name: 'Japan', code: 'JP' },\n            { name: 'Spain', code: 'ES' },\n            { name: 'United States', code: 'US' }\n        ];\n\n    }\n}"}}ngOnInit(){this.countries=[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["template-doc"]],inputs:{id:"id",title:"title"},decls:12,vars:5,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["defaultLabel","Select a Country","optionLabel","name",3,"options","ngModel","ngModelChange"],["pTemplate","selectedItems"],["pTemplate","item"],["selector","multi-select-template-demo",3,"code"],["class","flex align-items-center gap-2",4,"ngFor","ngForOf"],[4,"ngIf"],[1,"flex","align-items-center","gap-2"],["src","https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png",2,"width","18px"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Available options and the selected options support templating with "),e.TgZ(4,"i"),e._uU(5,"pTemplate"),e.qZA(),e._uU(6," properties respectively. In addition, header, footer and filter sections can be templated as well."),e.qZA()(),e.TgZ(7,"div",1)(8,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCountries=c}),e.YNc(9,P,2,2,"ng-template",3),e.YNc(10,Q,4,3,"ng-template",4),e.qZA()(),e._UZ(11,"app-code",5),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("options",o.countries)("ngModel",o.selectedCountries),e.xp6(3),e.Q6J("code",o.code))},dependencies:[r.sg,r.O5,s.h,u.NU,T.jx,n.JJ,n.On,d.c],encapsulation:2}),t})(),j=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["templates-doc"]],inputs:{id:"id",title:"title"},decls:88,vars:2,consts:[[3,"title","id"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(i,o){1&i&&(e.TgZ(0,"section"),e._UZ(1,"app-docsectiontext",0),e.TgZ(2,"div",1)(3,"table",2)(4,"thead")(5,"tr")(6,"th"),e._uU(7,"Name"),e.qZA(),e.TgZ(8,"th"),e._uU(9,"Parameters"),e.qZA()()(),e.TgZ(10,"tbody")(11,"tr")(12,"td"),e._uU(13,"item"),e.qZA(),e.TgZ(14,"td"),e._uU(15,"$implicit: Data of the item"),e.qZA()(),e.TgZ(16,"tr")(17,"td"),e._uU(18,"group"),e.qZA(),e.TgZ(19,"td"),e._uU(20,"$implicit: Data of the group item"),e.qZA()(),e.TgZ(21,"tr")(22,"td"),e._uU(23,"selectedItems"),e.qZA(),e.TgZ(24,"td"),e._uU(25,"$implicit: value"),e.qZA()(),e.TgZ(26,"tr")(27,"td"),e._uU(28,"header"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"-"),e.qZA()(),e.TgZ(31,"tr")(32,"td"),e._uU(33,"filter"),e.qZA(),e.TgZ(34,"td"),e._uU(35," options.filter: Callback to filter data by the value param"),e._UZ(36,"br"),e._uU(37," options.reset: Resets the filter. "),e.qZA()(),e.TgZ(38,"tr")(39,"td"),e._uU(40,"empty"),e.qZA(),e.TgZ(41,"td"),e._uU(42,"-"),e.qZA()(),e.TgZ(43,"tr")(44,"td"),e._uU(45,"emptyfilter"),e.qZA(),e.TgZ(46,"td"),e._uU(47,"-"),e.qZA()(),e.TgZ(48,"tr")(49,"td"),e._uU(50,"footer"),e.qZA(),e.TgZ(51,"td"),e._uU(52,"-"),e.qZA()(),e.TgZ(53,"tr")(54,"td"),e._uU(55,"loader"),e.qZA(),e.TgZ(56,"td"),e._uU(57,"options: Options of the scroller on loading. *This template can be used with virtualScroll."),e.qZA()(),e.TgZ(58,"tr")(59,"td"),e._uU(60,"checkicon"),e.qZA(),e.TgZ(61,"td"),e._uU(62,"-"),e.qZA()(),e.TgZ(63,"tr")(64,"td"),e._uU(65,"filtericon"),e.qZA(),e.TgZ(66,"td"),e._uU(67,"-"),e.qZA()(),e.TgZ(68,"tr")(69,"td"),e._uU(70,"removetokenicon"),e.qZA(),e.TgZ(71,"td"),e._uU(72,"-"),e.qZA()(),e.TgZ(73,"tr")(74,"td"),e._uU(75,"closeicon"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"-"),e.qZA()(),e.TgZ(78,"tr")(79,"td"),e._uU(80,"clearicon"),e.qZA(),e.TgZ(81,"td"),e._uU(82,"-"),e.qZA()(),e.TgZ(83,"tr")(84,"td"),e._uU(85,"dropdownicon"),e.qZA(),e.TgZ(86,"td"),e._uU(87,"-"),e.qZA()()()()()()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id))},dependencies:[d.c],encapsulation:2}),t})();function B(t,l){if(1&t&&(e.TgZ(0,"div",5),e._UZ(1,"img",6),e.TgZ(2,"div"),e._uU(3),e.qZA()()),2&t){const i=l.$implicit;e.xp6(1),e.Tol("flag flag-"+i.code.toLowerCase()),e.xp6(2),e.Oqu(i.name)}}let G=(()=>{class t{constructor(){this.code={basic:'\n<p-multiSelect [options]="virtualCountries" [showToggleAll]="false" [(ngModel)]="selectedCountries" optionLabel="name" [virtualScroll]="true" [filter]="true" [virtualScrollItemSize]="43" class="multiselect-custom-virtual-scroll">\n    <ng-template let-country pTemplate="item">\n        <div class="flex align-items-center gap-2">\n            <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'flag flag-\' + country.code.toLowerCase()" style="width: 18px"/>\n            <div>{{ country.name }}</div>\n        </div>\n    </ng-template>\n</p-multiSelect>',html:'\n<div class="card flex justify-content-center">\n    <p-multiSelect [options]="virtualCountries" [showToggleAll]="false" [(ngModel)]="selectedCountries" optionLabel="name" [virtualScroll]="true" [filter]="true" [virtualScrollItemSize]="43" class="multiselect-custom-virtual-scroll">\n        <ng-template let-country pTemplate="item">\n            <div class="flex align-items-center gap-2">\n                <img src="https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png" [class]="\'flag flag-\' + country.code.toLowerCase()" style="width: 18px"/>\n                <div>{{ country.name }}</div>\n            </div>\n        </ng-template>\n    </p-multiSelect>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\ninterface Country {\n    name: string;\n    code: string;\n}\n\n@Component({\n    selector: 'multi-select-virtual-scroll-demo',\n    templateUrl: './multi-select-virtual-scroll-demo.html'\n})\nexport class MultiSelectVirtualScrollDemo {\n    virtualCountries: Country[];\n\n    selectedCountries: Country[];\n\n    constructor() {\n        this.virtualCountries = []\n        for (let i = 0; i < 10000; i++) {\n            this.virtualCountries.push({ name: 'Item ' + i, code: 'Item ' + i });\n        }\n    }\n}"},this.virtualCountries=[];for(let i=0;i<1e4;i++)this.virtualCountries.push({name:"Item "+i,code:"Item "+i})}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["virtual-scroll-doc"]],inputs:{id:"id",title:"title"},decls:14,vars:9,consts:[[3,"title","id"],[1,"card","flex","justify-content-center"],["optionLabel","name",1,"multiselect-custom-virtual-scroll",3,"options","showToggleAll","ngModel","virtualScroll","filter","virtualScrollItemSize","ngModelChange"],["pTemplate","item"],["selector","multi-select-virtual-scroll-demo",3,"code"],[1,"flex","align-items-center","gap-2"],["src","https://primefaces.org/cdn/primeng/images/demo/flag/flag_placeholder.png",2,"width","18px"]],template:function(i,o){1&i&&(e.TgZ(0,"section")(1,"app-docsectiontext",0)(2,"p"),e._uU(3," VirtualScrolling is an efficient way of rendering the options by displaying a small subset of data in the viewport at any time. When dealing with huge number of options, it is suggested to enable VirtualScrolling to avoid performance issues. Usage is simple as setting "),e.TgZ(4,"i"),e._uU(5,"virtualScroll"),e.qZA(),e._uU(6," property to true and defining "),e.TgZ(7,"i"),e._uU(8,"virtualScrollItemSize"),e.qZA(),e._uU(9," to specify the height of an item. "),e.qZA()(),e.TgZ(10,"div",1)(11,"p-multiSelect",2),e.NdJ("ngModelChange",function(c){return o.selectedCountries=c}),e.YNc(12,B,4,3,"ng-template",3),e.qZA()(),e._UZ(13,"app-code",4),e.qZA()),2&i&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(10),e.Q6J("options",o.virtualCountries)("showToggleAll",!1)("ngModel",o.selectedCountries)("virtualScroll",!0)("filter",!0)("virtualScrollItemSize",43),e.xp6(2),e.Q6J("code",o.code))},dependencies:[s.h,u.NU,T.jx,n.JJ,n.On,d.c],encapsulation:2}),t})();var E=a(63408);let V=(()=>{class t{constructor(){this.docs=[{id:"import",label:"Import",component:I},{id:"basic",label:"Basic",component:b},{id:"reactive-forms",label:"Reactive Forms",component:h},{id:"chips",label:"Chips",component:v},{id:"group",label:"Group",component:M},{id:"template",label:"Template",component:Y},{id:"filter",label:"Filter",component:S},{id:"virtualscroll",label:"VirtualScroll",component:G},{id:"floatlabel",label:"Float Label",component:D},{id:"invalid",label:"Invalid",component:L},{id:"disabled",label:"Disabled",component:y},{id:"style",label:"Style",component:k},{id:"accessibility",label:"Accessibility",component:q}],this.apiDocs=[{id:"properties",label:"Properties",component:J},{id:"events",label:"Events",component:C},{id:"templates",label:"Templates",component:j}]}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:2,consts:[["title","Angular MultiSelect Component","header","MultiSelect","description","MultiSelect is used to select multiple items from a collection.",3,"docs","apiDocs"]],template:function(i,o){1&i&&e._UZ(0,"app-doc",0),2&i&&e.Q6J("docs",o.docs)("apiDocs",o.apiDocs)},dependencies:[E.x],styles:["[_nghost-%COMP%]     .p-multiselect{min-width:15rem;width:18rem}"]}),t})(),z=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[g.Bz.forChild([{path:"",component:V}]),g.Bz]}),t})(),W=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.ez,z,f]}),t})()}}]);